{"version":3,"sources":["webpack://vwoSdk/webpack/universalModuleDefinition","webpack://vwoSdk/webpack/bootstrap","webpack://vwoSdk/./lib/utils/DataTypeUtil.js","webpack://vwoSdk/./lib/services/logging/index.js","webpack://vwoSdk/./lib/enums/FileNameEnum.js","webpack://vwoSdk/./lib/constants/index.js","webpack://vwoSdk/./lib/utils/FunctionUtil.js","webpack://vwoSdk/./lib/enums/ApiEnum.js","webpack://vwoSdk/./lib/utils/ValidateUtil.js","webpack://vwoSdk/./lib/utils/CampaignUtil.js","webpack://vwoSdk/./lib/utils/DecisionUtil.js","webpack://vwoSdk/./lib/enums/GoalTypeEnum.js","webpack://vwoSdk/./lib/utils/ObjectUtil.js","webpack://vwoSdk/./lib/utils/ImpressionUtil.js","webpack://vwoSdk/./lib/enums/EventEnum.js","webpack://vwoSdk/./lib/enums/UrlEnum.js","webpack://vwoSdk/./lib/core/BucketingService.js","webpack://vwoSdk/./lib/enums/LogLevelEnum.js","webpack://vwoSdk/./lib/enums/CampaignTypeEnum.js","webpack://vwoSdk/./lib/enums/segment/index.js","webpack://vwoSdk/./lib/services/HooksManager.js","webpack://vwoSdk/./lib/utils/UuidUtil.js","webpack://vwoSdk/./lib/services/UrlService.js","webpack://vwoSdk/./lib/utils/FetchUtil.js","webpack://vwoSdk/./lib/utils/XhrUtil.js","webpack://vwoSdk/./lib/utils/SettingsFileUtil.js","webpack://vwoSdk/./lib/index.js","webpack://vwoSdk/./lib/VWO.js","webpack://vwoSdk/./lib/api/index.js","webpack://vwoSdk/./lib/api/activate.js","webpack://vwoSdk/./lib/core/VariationDecider.js","webpack://vwoSdk/./lib/enums/DataTypeEnum.js","webpack://vwoSdk/./node_modules/murmurhash/murmurhash.js","webpack://vwoSdk/./lib/services/logging/LoggingManager.js","webpack://vwoSdk/./lib/enums/AnsiColorEnum.js","webpack://vwoSdk/./lib/utils/LogMessageUtil.js","webpack://vwoSdk/./lib/services/logging/ConsoleLogManager.js","webpack://vwoSdk/./lib/enums/StatusEnum.js","webpack://vwoSdk/./lib/core/SegmentEvaluator.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperatorTypesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValueTypeRegexesEnum.js","webpack://vwoSdk/./lib/enums/segment/SegmentOperandValuesEnum.js","webpack://vwoSdk/./lib/utils/SegmentUtil.js","webpack://vwoSdk/./lib/enums/HooksEnum.js","webpack://vwoSdk/./node_modules/uuid/v5.js","webpack://vwoSdk/./node_modules/uuid/lib/v35.js","webpack://vwoSdk/./node_modules/uuid/lib/bytesToUuid.js","webpack://vwoSdk/./node_modules/uuid/lib/sha1-browser.js","webpack://vwoSdk/./lib/api/getVariation.js","webpack://vwoSdk/./lib/api/track.js","webpack://vwoSdk/./lib/api/isFeatureEnabled.js","webpack://vwoSdk/./lib/api/getFeatureVariableValue.js","webpack://vwoSdk/./lib/utils/FeatureUtil.js","webpack://vwoSdk/./lib/enums/FeatureVariableTypeEnum.js","webpack://vwoSdk/./lib/api/push.js","webpack://vwoSdk/./lib/services/EventQueue.js","webpack://vwoSdk/./lib/utils/EventDispatcherUtil.js","webpack://vwoSdk/./lib/utils/HttpImageUtil.js","webpack://vwoSdk/./lib/services/SettingsFileManager.js","webpack://vwoSdk/./lib/schemas/SettingsFileSchema.js","webpack://vwoSdk/./node_modules/superstruct/lib/index.es.js","webpack://vwoSdk/./lib/services/UsageStats.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DataTypeUtil","_toStringValue","val","toString","isNumber","isString","isObject","isFunction","isBoolean","isUndefined","isNull","isArray","logging","require","INDEX","VWO","API","Activate","GetVariation","Track","IsFeatureEnabled","GetFeatureVariableValue","Push","SegmentEvaluator","BucketingService","VariationDecider","ConsoleLogManager","EventQueue","LoggingManager","SettingsFileManager","BatchEventsQueue","CampaignUtil","EventDispatcher","EventDispatcherUtil","FeatureUtil","Functionutil","ImpressionUtil","UuidUtil","ValidateUtil","DecisionUtil","HttpHandlerUtil","HttpImageUtil","UsageStatsUtil","packageFile","SDK_NAME","version","SDK_VERSION","PLATFORM","SEED_VALUE","MAX_TRAFFIC_PERCENT","MAX_TRAFFIC_VALUE","MAX_EVENTS_PER_REQUEST","DEFAULT_EVENTS_PER_REQUEST","DEFAULT_REQUEST_TIME_INTERVAL","STATUS_RUNNING","SEED_URL","HTTP_PROTOCOL","HTTPS_PROTOCOL","SDK_QUERY_PARAM","SDK_VERSION_QUERY_PARAM","FunctionUtil","cloneObject","obj","JSON","parse","stringify","getRandomNumber","Math","random","getCurrentUnixTimestamp","ceil","Date","getCurrentUnixTimestampInMillis","matchWithRegex","string","regex","match","RegExp","err","FileNameEnum","logger","getLogger","LogLevelEnum","LogMessageEnum","LogMessageUtil","file","log","ERROR","build","ERROR_MESSAGES","SEGMENTATION_REGEX_CREATION_FAILED","getCurrentTime","toISOString","convertObjectKeysToString","properties","excludedProperties","queryParams","prop","indexOf","objectValues","values","push","LAUNCH","ACTIVATE","GET_VARIATION_NAME","TRACK","IS_FEATURE_ENABLED","GET_FEATURE_VARIABLE_VALUE","PUSH","DataTypeEnum","ApiEnum","GoalTypeEnum","APIMethodArgumentsValidationEnum","campaignKey","userId","customVariables","variationTargetingVariables","userStorageData","shouldTrackReturningUser","metaData","type","STRING","OBJECT","BOOLEAN","goalIdentifier","goalTypeToTrack","ALL","STRING_NULL_UNDEFINED_ARRAY","variableKey","tagKey","tagValue","customDimensionMap","isValidValue","undefined","isValidString","isValidNumber","isValidFunction","isValidBoolean","isValidObject","areValidParamsForAPIMethod","argsObj","args","method","validators","length","argConfig","argValue","NUMBER","every","Constants","CampaignTypeEnum","_getVariationBucketRange","variationWeight","startRange","min","getCampaignBasedOnId","settingsFile","campaignId","campaign","campaigns","parseInt","id","scaleVariationWeights","variations","totalWeight","reduce","acc","variation","weight","forEach","getCampaign","getCampaignsForKeys","campaignKeys","getCampaignsForGoal","goal","getCampaignGoal","CAMPAIGN_NOT_FOUND_FOR_GOAL","getCampaignStatus","status","toLowerCase","isCampaignRunning","validateCampaign","keys","setVariationAllocation","numberOfVariations","currentAllocation","assignRangeValues","DEBUG","DEBUG_MESSAGES","VARIATION_RANGE_ALLOCATION","variationName","start","startVariationAllocation","end","endVariationAllocation","setCampaignAllocation","stepFactor","desiredCampaignGoal","goals","identifier","getCampaignVariation","desiredVariation","getControlForCampaign","control","isFeatureTestCampaign","FEATURE_TEST","isFeatureRolloutCampaign","FEATURE_ROLLOUT","isAbCampaign","AB","isPartOfGroup","campaignGroups","groupId","groupName","groups","getGroupCampaigns","getBucketingSeed","isBucketingSeedEnabled","StatusEnum","HooksManager","HooksEnum","SegmentationTypeEnum","getVariation","config","isTrackUserAPI","newGoalIdentifier","api","vwoUserId","generateFor","accountId","USER_UUID","uuid","decision","campaignType","campaignName","event","DECISION_TYPES","CAMPAIGN_DECISION","isForcedVariationEnabled","sdkVersion","source","assign","_vwoUserId","isUserListEnabled","whitelistedVariation","_checkForWhitelisting","storedVariation","_checkForUserStorage","_checkForPreSegmentation","isUserPartOfCampaign","campaignList","isWhitelistedOrStoredVariation","_checkForStorageAndWhitelisting","INFO","INFO_MESSAGES","MEG_CALLED_CAMPAIGN_NOT_WINNER","inEligibleCampaignKeys","eligibleCampaignKeys","getEligbleCampaigns","eligibleCampaigns","inEligibleCampaigns","MEG_ELIGIBLE_CAMPAIGNS","slice","inEligibleText","noOfEligibleCampaigns","noOfGroupCampaigns","evaluateTrafficAndGetVariation","_normalizeAndFindWinningCampaign","_evaluateWhitelisting","disableLogs","targetedVariations","segments","PASSED","FAILED","SEGMENTATION_STATUS","segmentationType","SEGMENTATION_SKIPPED","_getVariation","calculateBucketValue","variationId","_getStoredVariationAndGoalIdentifiers","userData","_getStoredUserData","USER_STORAGE_SERVICE_NO_STORED_DATA","_getStoredVariation","data","userStorageMap","userStorageService","USER_STORAGE_SERVICE_NOT_CONFIGURED","GETTING_DATA_USER_STORAGE_SERVICE","USER_STORAGE_SERVICE_GET_FAILED","error","_saveUserData","isSaved","set","SETTING_DATA_USER_STORAGE_SERVICE","USER_STORAGE_SERVICE_SET_FAILED","calledCampaign","otherCampaignWinner","some","groupCampaign","OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE","getVariationAllotted","USER_VARIATION_ALLOCATION_STATUS","execute","fromUserStorageService","isUserWhitelisted","isFeatureEnabled","variationString","whitelistingResult","WHITELISTING_SKIPPED","GOT_STORED_VARIATION","storedGoalIdentifier","isStoredVariation","WARN","WARNING_MESSAGES","CAMPAIGN_NOT_ACTIVATED","apiName","reason","shortlistedCampaigns","floor","winnerCampaign","MEG_GOT_WINNER_CAMPAIGN","REVENUE","CUSTOM","ObjectUtil","areObjectKeys","getKeyValue","map","UrlEnum","UrlService","getBaseProperties","configObj","sId","u","getPrimaryProperties","getReportingProperties","account_id","ap","buildEventForPushing","url","getBaseUrl","tags","encodeURIComponent","IMPRESSION_FOR_PUSH","_getStringifiedLogProperties","buildBatchEventForPushing","buildEventForTrackingUser","usageStats","experiment_id","combination","ed","TRACK_USER","IMPRESSION_FOR_TRACK_USER","buildBatchEventForTrackingUser","buildEventForTrackingGoal","revenue","goalId","TRACK_GOAL","IMPRESSION_FOR_TRACK_GOAL","buildBatchEventForTrackingGoal","sdkKey","getEventsBaseProperties","eventName","en","a","env","eTime","EVENTS","getEventBasePayload","props","sdkName","$visitor","vwo_fs_environment","msgId","visId","sessionId","time","visitor","getTrackUserPayloadData","isFirst","IMPRESSION_FOR_EVENT_ARCH_TRACK_USER","getTrackGoalPayloadData","metricMap","revenueValue","revenuePropList","eventProperties","metric","IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL","goalName","vwoMeta","size","revenueProp","isCustomEvent","getPushPayloadData","IMPRESSION_FOR_EVENT_ARCH_PUSH","logProperties","VWO_VARIATION_SHOWN","VWO_SYNC_VISITOR_PROP","BASE_URL","SETTINGS_URL","WEBHOOK_SETTINGS_URL","BATCH_EVENTS","Hasher","_generateBucketValue","hashValue","maxValue","multiplier","ratio","pow","multipliedValue","bucketValue","_getBucketValueForUser","seed","disableLog","v3","USER_HASH_BUCKET_VALUE","trafficAllocation","percentTraffic","valueAssignedToUser","isUserPart","USER_CAMPAIGN_ELIGIBILITY","bucketUserToVariation","_generateHashValue","USER_CAMPAIGN_BUCKET_VALUES","AnsiColorEnum","NOTSET","LogLevelColorInfoEnum","BOLD","WHITE","RESET","LIGHTBLUE","CYAN","YELLOW","RED","LogLevelInfoEnum","LogNumberLevel","_0","_1","_2","_3","_4","SegmentEnum","SegmentOperandTypes","SegmentOperatorTypes","SegmentOperandValueTypeRegexes","SegmentOperandValues","init","callback","integrations","uuidv5","VWO_NAMESPACE","URL","hash","userIdNamespace","generate","replace","toUpperCase","namespace","collectionPrefix","baseUrl","FetchUtil","_getStoredSettings","parsedSettings","isStoredData","getSettings","settings","info","console","warning","warn","send","payload","Promise","resolve","reject","options","body","fetch","then","res","jsonData","json","setSettings","XhrUtil","xhr","XMLHttpRequest","xhrHandler","onload","xhrOnLoad","onerror","xhrOnError","open","parsedXhrResponse","response","SettingsFileUtil","protocol","hostname","path","isViaWebhook","port","handleHttpRequest","statusCode","contentType","headers","rawData","test","message","resume","setEncoding","on","chunk","handleHttpResponse","parsedData","setLogHandler","setLogLevel","logError","parameter","CONFIG_PARAMETER_INVALID","Error","logInfo","CONFIG_PARAMETER_USED","setLogger","getSettingsFile","launch","sdkConfig","isDevelopmentMode","includes","level","pollingInterval","batchEvents","returnPromiseFor","CONFIG_CORRUPTED","setLogColorMode","haveColoredLogs","CONFIG_CUSTOM_LOGGER_USED","CONFIG_LOG_LEVEL_SET","CONFIG_DEVELOPMENT_MODE_STATUS","SettingsFileService","UsageStats","getVariationName","optOut","settingsFileManager","isSettingsFileValid","CONFIG_VALID","eventQueue","checkAndPoll","collectUsageStats","getConfig","processSettingsFile","SDK_INITIALIZED","SETTINGS_FILE_INVALID","self","activate","all","CONFIG_RETURN_PROMISE","API_NOT_ENABLED","responseCallback","_error","_response","apiResponse","campaignSpecifier","track","trackResponse","counter","filter","Boolean","isFeatureEnabledApiResponse","getFeatureVariableValue","arguments","API_BAD_PARAMETERS","OPT_OUT_API_CALLED","_destroyInstanceVariables","batchEventsQueue","flushEvents","getAndUpdateSettingsFile","EventEnum","vwoInstance","areParamsValid","CAMPAIGN_NOT_RUNNING","API_NOT_APPLICABLE","DECISION_NO_VARIATION_ALLOTED","CAMPAIGN_USER_ALREADY_TRACKED","enqueue","isEventArchEnabled","getUsageStats","process","Bucketer","USER_ID_INVALID","getVariationOfCampaignForUser","USER_NOT_PART_OF_CAMPAIGN","USER_VARIATION_STATUS","MurmurHashV3","remainder","bytes","h1","h1b","c1","c2","k1","charCodeAt","murmur","v2","str","k","h","globalLogLevel","isColoredLogEnabled","globalLogHandler","LogManager","_customLog","getLogLevel","getLogColorMode","GREEN","nargs","template","index","result","logLevel","prefix","logMessage","shouldLog","consoleLog","targetLogLevel","logArguments","apply","operandCustomVariablesParser","operandUserParser","AND","OR","NOT","CUSTOM_VARIABLE","USER","dsl","evaluator","operator","subDsl","list","SEGMENTATION_ERROR","LOWER","LOWER_MATCH","WILDCARD","WILDCARD_MATCH","REGEX","REGEX_MATCH","STARTING_STAR","ENDING_STAR","GREATER_THAN_MATCH","GREATER_THAN_EQUAL_TO_MATCH","LESS_THAN_MATCH","LESS_THAN_EQUAL_TO_MATCH","LOWER_VALUE","STARTING_ENDING_STAR_VALUE","STARTING_STAR_VALUE","ENDING_STAR_VALUE","REGEX_VALUE","EQUAL_VALUE","GREATER_THAN_VALUE","GREATER_THAN_EQUAL_TO_VALUE","LESS_THAN_VALUE","LESS_THAN_EQUAL_TO_VALUE","extractOperandValue","operand","processValues","operandValue","processedOperandValue","parseFloat","processedTagValue","preProcessTagValue","preProcessOperandValue","operandType","startingStar","endingStar","operandKey","processedValues","endsWith","startsWith","pattern","extractResult","users","split","trim","v35","sha1","bytesToUuid","hashfunc","generateUUID","buf","offset","off","unescape","Array","stringToBytes","hex","uuidToBytes","TypeError","concat","idx","DNS","byteToHex","substr","bth","join","f","x","y","z","ROTL","K","H","msg","N","M","j","W","b","e","T","GOAL_TYPE_TO_TRACK_DEFAULT","GOAL_IDENTIFIER_SEPERATOR","Set","events","areGlobalGoals","TRACK_API_GOAL_NOT_FOUND","TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL","add","mca","CAMPAIGN_GOAL_ALREADY_TRACKED","trackCampaignGoal","FEATURE_STATUS","variable","getVariableForFeature","getVariableValueForVariation","FEATURE_VARIABLE_VALUE","variableValue","FEATURE_VARIABLE_DEFAULT_VALUE","VARIABLE_NOT_FOUND","getTypeCastVariableValue","FeatureVariableTypeEnum","variableData","variables","variationVariable","variableType","typeCastedValue","INTEGER","isNaN","UNABLE_TO_CAST_VALUE","DOUBLE","PUSH_INVALID_PARAMS","TAG_KEY_LENGTH_EXCEEDED","TAG_VALUE_LENGTH_EXCEEDED","success","running","queue","dispatchPostCall","dispatchGetCall","EVENT_QUEUE","queueType","executeNext","shift","parsedUrl","sendCall","successCallback","endPoint","IMPRESSION_FAILED","handleGetResponse","baseParams","params","mainKeys","IMPRESSION_SUCCESS","handlePostResponse","IMPRESSION_SUCCESS_FOR_EVENT_ARCH","noop","printLog","URLSearchParams","host","pathname","errorCallback","isCallbackCalled","Image","img","handleGetCall","_err","src","validateSettingsFile","_configObj","_clonedSettingsFile","SETTINGS_FILE_CORRUPTED","lastSettingsFile","setInterval","latestSettingsFile","POLLING_SUCCESS","stringifiedLatestSettingsFile","updateSettingsFile","POLLING_SETTINGS_FILE_UPDATED","POLLING_SETTINGS_FILE_NOT_UPDATED","_e","POLLING_FAILED","POLLING_SETTINGS_FILE_REGISTERED","_setVariationBucketing","SETTINGS_FILE_PROCESSED","_reject","API_HAS_CORRUPTED_SETTINGS_FILE","validate","number","boolean","array","optional","union","record","campaignGoalSchema","variableObjectSchema","campaignVariationSchema","changes","campaignObjectSchema","groupSchema","settingsFileSchema","_defineProperty","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","toFailures","context","fail","iteratorShift","input","done","next","func","Struct","schema","coercer","validator","refiner","StructError","failure","moreFailures","branch","rest","failuresResult","super","failures","stack","__proto__","assert","struct","coerce","ret","is","coercing","check","ctx","v","parent","coercion","fn","defaulted","S","fallback","strict","isPlainObject","changed","masked","getPrototypeOf","empty","refinement","max","regexp","any","Element","entries","date","getTime","dynamic","enums","toLiteralString","instance","Class","intersection","Structs","lazy","literal","constant","Key","Value","Map","never","nullable","knowns","Never","createObjectCoercer","unknowns","delete","partial","tuple","Elements","Number"],"mappings":"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","file":"vwo-javascript-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\t// CommonJS2\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\t// AMD\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\t// CommonJS\n\telse if(typeof exports === 'object')\n\t\texports[\"vwoSdk\"] = factory();\n\t// Root\n\telse\n\t\troot[\"vwoSdk\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = {\n  _toStringValue: function(val) {\n    return Object.prototype.toString.call(val);\n  },\n  isNumber: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Number]';\n  },\n  isString: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object String]';\n  },\n  isObject: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Object]';\n  },\n  isFunction: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Function]';\n  },\n  isBoolean: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Boolean]';\n  },\n  isUndefined: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Undefined]';\n  },\n  isNull: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Null]';\n  },\n  isArray: function(val) {\n    return DataTypeUtil._toStringValue(val) === '[object Array]';\n  }\n};\n\nmodule.exports = DataTypeUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('./LoggingManager');\n\nmodule.exports = logging;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LIB_PATH = 'lib';\nconst CORE_PATH = 'lib/core';\nconst UTIL_PATH = 'lib/util';\nconst SERVICES_PATH = 'lib/services';\n\nmodule.exports = {\n  INDEX: `${LIB_PATH}/index`,\n\n  VWO: `${LIB_PATH}/VWO`,\n\n  API: `${LIB_PATH}/api/index`,\n\n  Activate: `${LIB_PATH}/api/activate`,\n  GetVariation: `${LIB_PATH}/api/getVariation`,\n  Track: `${LIB_PATH}/api/track`,\n  IsFeatureEnabled: `${LIB_PATH}/api/isFeatureEnabled`,\n  GetFeatureVariableValue: `${LIB_PATH}/api/getFeatureVariableValue`,\n  Push: `${LIB_PATH}/api/push`,\n\n  SegmentEvaluator: `${CORE_PATH}/SegmentEvaluator`,\n  BucketingService: `${CORE_PATH}/BucketingService`,\n  VariationDecider: `${CORE_PATH}/VariationDecider`,\n\n  ConsoleLogManager: `${SERVICES_PATH}/ConsoleLogManager`,\n  EventQueue: `${SERVICES_PATH}/EventQueue`,\n  LoggingManager: `${SERVICES_PATH}/LoggingManager`,\n  SettingsFileManager: `${SERVICES_PATH}/SettingsFileManager`,\n  BatchEventsQueue: `${SERVICES_PATH}/BatchEventsQueue`,\n\n  CampaignUtil: `${UTIL_PATH}/CampaignUtil`,\n  DataTypeUtil: `${UTIL_PATH}/DataTypeUtil`,\n  EventDispatcher: `${UTIL_PATH}/EventDispatcher`,\n  EventDispatcherUtil: `${UTIL_PATH}/EventDispatcherUtil`,\n  FeatureUtil: `${UTIL_PATH}/FeatureUtil`,\n  Functionutil: `${UTIL_PATH}/Functionutil`,\n  ImpressionUtil: `${UTIL_PATH}/ImpressionUtil`,\n  UuidUtil: `${UTIL_PATH}/UuidUtil`,\n  ValidateUtil: `${UTIL_PATH}/ValidateUtil`,\n  DecisionUtil: `${UTIL_PATH}/DecisionUtils`,\n  HttpHandlerUtil: `${UTIL_PATH}/HttpHandlerUtil`,\n  HttpImageUtil: `${UTIL_PATH}/HttpImageUtil`,\n\n  UsageStatsUtil: `${SERVICES_PATH}/UsageStats`\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* global SDK_NAME, SDK_VERSION */\n\nlet packageFile = {};\n\n// For javascript-sdk, to keep the build size low\n// avoid adding the whole package file in the file\nif (typeof process.env === 'undefined') {\n  packageFile = {\n    name: SDK_NAME,\n    version: SDK_VERSION\n  };\n} else {\n  packageFile = require('../../package.json');\n}\n\nmodule.exports = {\n  SDK_NAME: packageFile.name,\n  SDK_VERSION: packageFile.version,\n\n  PLATFORM: 'server',\n\n  SEED_VALUE: 1,\n\n  MAX_TRAFFIC_PERCENT: 100,\n  MAX_TRAFFIC_VALUE: 10000,\n  MAX_EVENTS_PER_REQUEST: 5000,\n\n  DEFAULT_EVENTS_PER_REQUEST: 100,\n  DEFAULT_REQUEST_TIME_INTERVAL: 600, // 10 * 60(secs) = 600 secs i.e. 10 minutes\n\n  STATUS_RUNNING: 'RUNNING',\n\n  SEED_URL: 'https://vwo.com',\n\n  HTTP_PROTOCOL: 'http://',\n  HTTPS_PROTOCOL: 'https://',\n\n  SDK_QUERY_PARAM: 'sdk',\n  SDK_VERSION_QUERY_PARAM: 'sdk-v'\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FunctionUtil = {\n  cloneObject: obj => {\n    if (!obj) {\n      return obj;\n    }\n\n    let clonedObj = JSON.parse(JSON.stringify(obj));\n\n    return clonedObj;\n  },\n  getRandomNumber: () => {\n    return Math.random();\n  },\n  getCurrentUnixTimestamp: () => {\n    return Math.ceil(+new Date() / 1000);\n  },\n  getCurrentUnixTimestampInMillis: () => {\n    return +new Date();\n  },\n  matchWithRegex: (string, regex) => {\n    try {\n      return string.match(new RegExp(regex));\n    } catch (err) {\n      const logging = require('../services/logging');\n      const FileNameEnum = require('../enums/FileNameEnum');\n\n      const logger = logging.getLogger();\n      const { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n      const file = FileNameEnum.FunctionUtil;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_REGEX_CREATION_FAILED, {\n          file,\n          regex\n        })\n      );\n      return null;\n    }\n  },\n  getCurrentTime() {\n    return new Date().toISOString();\n  },\n  convertObjectKeysToString(properties, excludedProperties) {\n    let queryParams = '';\n    excludedProperties = excludedProperties || [];\n\n    for (let prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        if (excludedProperties.indexOf(prop) === -1) {\n          queryParams += prop + '=' + properties[prop] + '&';\n        }\n      }\n    }\n\n    return queryParams;\n  },\n  objectValues(obj) {\n    let values = [];\n\n    for (const prop in obj) {\n      values.push(obj[prop]);\n    }\n    return values;\n  }\n};\n\nmodule.exports = FunctionUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = {\n  LAUNCH: 'launch',\n  ACTIVATE: 'activate',\n  GET_VARIATION_NAME: 'getVariation',\n  TRACK: 'track',\n  IS_FEATURE_ENABLED: 'isFeatureEnabled',\n  GET_FEATURE_VARIABLE_VALUE: 'getFeatureVariableValue',\n  PUSH: 'push'\n};\n\nmodule.exports = ApiEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\nconst DataTypeEnum = require('../enums/DataTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst APIMethodArgumentsValidationEnum = {\n  [ApiEnum.ACTIVATE]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.TRACK]: function({\n    campaignKey,\n    userId,\n    goalIdentifier,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    goalTypeToTrack = GoalTypeEnum.ALL,\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'goalIdentifier',\n        value: goalIdentifier,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'goalTypeToTrack',\n        value: goalTypeToTrack,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.IS_FEATURE_ENABLED]: function({\n    campaignKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    shouldTrackReturningUser = false,\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'shouldTrackReturningUser',\n        value: shouldTrackReturningUser,\n        type: DataTypeEnum.BOOLEAN\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.GET_FEATURE_VARIABLE_VALUE]: function({\n    campaignKey,\n    variableKey,\n    userId,\n    customVariables = {},\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData = {}\n  }) {\n    return [\n      {\n        key: 'campaignKey',\n        value: campaignKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'variableKey',\n        value: variableKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customVariables',\n        value: customVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'variationTargetingVariables',\n        value: variationTargetingVariables,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'userStorageData',\n        value: userStorageData,\n        type: DataTypeEnum.OBJECT\n      },\n      {\n        key: 'metaData',\n        value: metaData,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  },\n  [ApiEnum.PUSH]: function({ tagKey, tagValue, userId, customDimensionMap }) {\n    return [\n      {\n        key: 'tagKey',\n        value: tagKey,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'tagValue',\n        value: tagValue,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'userId',\n        value: userId,\n        type: DataTypeEnum.STRING\n      },\n      {\n        key: 'customDimensionMap',\n        value: customDimensionMap,\n        type: DataTypeEnum.OBJECT\n      }\n    ];\n  }\n};\n// both have same\nAPIMethodArgumentsValidationEnum[ApiEnum.GET_VARIATION_NAME] = APIMethodArgumentsValidationEnum[ApiEnum.ACTIVATE];\n\nconst ValidateUtil = {\n  isValidValue: function(value) {\n    return !!(value !== undefined && value);\n  },\n  isValidString: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isString(value);\n  },\n  isValidNumber: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isNumber(value);\n  },\n  isValidFunction: function(value) {\n    return ValidateUtil.isValidValue(value) && DataTypeUtil.isFunction(value);\n  },\n  isValidBoolean: function(value) {\n    return value !== undefined && DataTypeUtil.isBoolean(value);\n  },\n  isValidObject: function(value) {\n    return value !== undefined && DataTypeUtil.isObject(value);\n  },\n  areValidParamsForAPIMethod: argsObj => {\n    let isValid = false;\n    let args = APIMethodArgumentsValidationEnum[argsObj.method](argsObj);\n\n    let validators = [];\n\n    for (let i = 0; i < args.length; i++) {\n      let argConfig = args[i];\n      let argValue = argConfig.value;\n      let dataType = argConfig.type;\n      // let value;\n\n      switch (dataType) {\n        case DataTypeEnum.NUMBER:\n          validators.push(ValidateUtil.isValidNumber(argValue));\n          break;\n        case DataTypeEnum.STRING:\n          validators.push(ValidateUtil.isValidString(argValue));\n          break;\n        case DataTypeEnum.BOOLEAN:\n          validators.push(ValidateUtil.isValidBoolean(argValue));\n          break;\n        // case DataTypeEnum.FUNCTION:\n        //   validators.push(ValidateUtil.isValidFunction(argValue));\n        //   break;\n        case DataTypeEnum.OBJECT:\n          validators.push(ValidateUtil.isValidObject(argValue));\n          break;\n        case DataTypeEnum.STRING_NULL_UNDEFINED_ARRAY:\n          let value =\n            ValidateUtil.isValidString(argValue) ||\n            DataTypeUtil.isUndefined(argValue) ||\n            DataTypeUtil.isNull(argValue) ||\n            DataTypeUtil.isArray(argValue);\n          validators.push(value);\n          break;\n        // case DataTypeEnum.NUMBER_STRING:\n        //   value = ValidateUtil.isValidNumber(argValue) || ValidateUtil.isValidString(argValue);\n        //   validators.push(value);\n        //   break;\n      }\n    }\n\n    isValid = validators.every(val => val);\n\n    return isValid;\n  }\n};\n\nmodule.exports = ValidateUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('./ValidateUtil');\nconst Constants = require('../constants');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nlet CampaignUtil = {\n  /**\n   * Returns the bucket size of variation.\n   *\n   * @param {Number/Float} - weight of variation\n   *\n   * @return {Number} bucket start range of Variation\n   */\n  _getVariationBucketRange: variationWeight => {\n    if (!variationWeight || variationWeight === 0) {\n      return 0;\n    }\n\n    const startRange = Math.ceil(variationWeight * 100);\n\n    return Math.min(startRange, Constants.MAX_TRAFFIC_VALUE);\n  },\n\n  /**\n   * Get the campaign on the basis of campaign id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Object} campaign object\n   */\n  getCampaignBasedOnId: (settingsFile, campaignId) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (parseInt(settingsFile.campaigns[i].id, 10) === parseInt(campaignId, 10)) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * It extracts the weights from all the variations inside the campaign\n      and scales them so that the total sum of eligible variations' weights become 100%\n\n      1. variations\n   */\n  scaleVariationWeights: variations => {\n    const totalWeight = variations.reduce((acc, variation) => {\n      return acc + variation.weight;\n    }, 0);\n    if (!totalWeight) {\n      const weight = 100 / variations.length;\n      variations.forEach(variation => (variation.weight = weight));\n    } else {\n      variations.forEach(variation => (variation.weight = (variation.weight / totalWeight) * 100));\n    }\n  },\n\n  getCampaign: (settingsFile, campaignKey) => {\n    let campaign;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      if (settingsFile.campaigns[i].key === campaignKey) {\n        campaign = settingsFile.campaigns[i];\n\n        break;\n      }\n    }\n\n    return campaign;\n  },\n  /**\n   * Gets campaigns for corresponding campaignKeys\n   *\n   * @param {Object} settingsFile\n   * @param {Array} campaignKeys\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForKeys: (settingsFile, campaignKeys) => {\n    const campaigns = [];\n    campaignKeys.forEach(key => {\n      let campaign = CampaignUtil.getCampaign(settingsFile, key);\n      if (campaign) {\n        campaigns.push(campaign);\n      } else {\n        campaigns.push({\n          key\n        });\n      }\n    });\n    return campaigns;\n  },\n  /**\n   * Gets campaigns which have the goalIdentifier present\n   *\n   * @param {settingsFile}\n   * @param {String} goalIdentifier\n   * @param {String} goalTypeToTrack type of goal to track\n   *\n   * @return {Array} Campaigns\n   */\n  getCampaignsForGoal: (settingsFile, goalIdentifier, goalTypeToTrack) => {\n    let campaigns = [];\n    settingsFile.campaigns.forEach(campaign => {\n      const goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n      if (goal && (goalTypeToTrack === GoalTypeEnum.ALL || goal.type === goalTypeToTrack)) {\n        campaigns.push(campaign);\n      }\n    });\n    if (!campaigns.length) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CAMPAIGN_NOT_FOUND_FOR_GOAL, {\n          file: FileNameEnum.CampaignUtil,\n          goalIdentifier\n        })\n      );\n    }\n    return campaigns;\n  },\n  getCampaignStatus: (settingsFile, campaignKey) => {\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || !campaign.status) {\n      // log error\n      return '';\n    }\n\n    return campaign.status.toLowerCase();\n  },\n\n  isCampaignRunning: (settingsFile, campaignKey) => {\n    return CampaignUtil.getCampaignStatus(settingsFile, campaignKey) === 'running';\n  },\n  /**\n   * Validates the campaign\n   *\n   * @param {Campaign} campaign the campaign to be validated\n   *\n   * @return {Boolean} true is campaign is valid\n   */\n  validateCampaign: campaign => {\n    return ValidateUtil.isValidValue(campaign) && campaign.variations && Object.keys(campaign.variations).length > 0;\n  },\n\n  /**\n   * Assigns the buckets to the Variations of the campaign\n   * depending on the traffic allocation\n   *\n   * @param {Campaign} campaign whose Variations are to be allocated\n   */\n  setVariationAllocation: campaign => {\n    const numberOfVariations = campaign.variations.length;\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < numberOfVariations; i++) {\n      let variation = campaign.variations[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(variation, currentAllocation);\n      currentAllocation += stepFactor;\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.VARIATION_RANGE_ALLOCATION, {\n          file: FileNameEnum.CampaignUtil,\n          campaignKey: campaign.key,\n          variationName: variation.name,\n          variationWeight: variation.weight,\n          start: variation.startVariationAllocation,\n          end: variation.endVariationAllocation\n        })\n      );\n    }\n  },\n\n  /**\n   * Assign range allocation to the campaigns in the list to decide which campaign to choose out of the Mutually Exclusive group\n   *\n   * @param {Array} campaigns\n   */\n  setCampaignAllocation: campaigns => {\n    let stepFactor = 0;\n\n    for (let i = 0, currentAllocation = 0; i < campaigns.length; i++) {\n      let campaign = campaigns[i];\n\n      stepFactor = CampaignUtil.assignRangeValues(campaign, currentAllocation);\n      currentAllocation += stepFactor;\n    }\n  },\n\n  assignRangeValues: (variation, currentAllocation) => {\n    let stepFactor;\n    stepFactor = CampaignUtil._getVariationBucketRange(variation.weight);\n\n    if (stepFactor) {\n      variation.startVariationAllocation = currentAllocation + 1;\n      variation.endVariationAllocation = currentAllocation + stepFactor;\n    } else {\n      variation.startVariationAllocation = -1;\n      variation.endVariationAllocation = -1;\n    }\n    return stepFactor;\n  },\n  getCampaignGoal: (settingsFile, campaignKey, goalIdentifier) => {\n    let desiredCampaignGoal = null;\n\n    if (!settingsFile || !campaignKey || !goalIdentifier) {\n      return desiredCampaignGoal;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredCampaignGoal;\n    }\n\n    for (let i = 0; i < campaign.goals.length; i++) {\n      let goal = campaign.goals[i];\n\n      if (goal.identifier === goalIdentifier) {\n        desiredCampaignGoal = goal;\n        break;\n      }\n    }\n\n    return desiredCampaignGoal;\n  },\n  getCampaignVariation: (settingsFile, campaignKey, variationName) => {\n    let desiredVariation = null;\n\n    if (!settingsFile || !campaignKey || !variationName) {\n      return desiredVariation;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign) {\n      return desiredVariation;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      let variation = campaign.variations[i];\n\n      if (variation.name === variationName) {\n        desiredVariation = variation;\n\n        break;\n      }\n    }\n\n    return desiredVariation;\n  },\n  getControlForCampaign: campaign => {\n    let control = {};\n\n    if (!campaign || !campaign.variations) {\n      return control;\n    }\n\n    for (let i = 0; i < campaign.variations.length; i++) {\n      if (campaign.variations[i].id === 1) {\n        control = campaign.variations[i];\n        break;\n      }\n    }\n\n    return control;\n  },\n  isFeatureTestCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_TEST) {\n      return true;\n    }\n\n    return false;\n  },\n  isFeatureRolloutCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT) {\n      return true;\n    }\n\n    return false;\n  },\n  isAbCampaign: campaign => {\n    if (campaign && campaign.type === CampaignTypeEnum.AB) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Check if the campaign is a part of mutually exclusive group\n   *\n   * @param {Object} settingsFile\n   * @param {Number} campaignId\n   *\n   * @returns {Number} group id of the campaign.\n   */\n  isPartOfGroup: (settingsFile, campaignId) => {\n    if (settingsFile.campaignGroups && Object.prototype.hasOwnProperty.call(settingsFile.campaignGroups, campaignId)) {\n      return {\n        groupId: settingsFile.campaignGroups[campaignId],\n        groupName: settingsFile.groups[settingsFile.campaignGroups[campaignId]].name\n      };\n    }\n    return {};\n  },\n\n  /**\n   * Get the list of campaigns on the basis of their id\n   *\n   * @param {Object} settingsFile\n   * @param {Number} groupId\n   *\n   * @returns {Array} list of campaigns\n   */\n  getGroupCampaigns: (settingsFile, groupId) => {\n    const campaigns = [];\n    if (Object.prototype.hasOwnProperty.call(settingsFile.groups, groupId)) {\n      settingsFile.groups[groupId].campaigns.forEach(campaignId => {\n        let campaign = CampaignUtil.getCampaignBasedOnId(settingsFile, campaignId);\n        if (campaign) {\n          campaigns.push(campaign);\n        }\n      });\n    }\n    return campaigns;\n  },\n\n  /**\n   * Decide the Seed for murmurhash to bucket user.\n   * @param {string} userId\n   * @param {object} campaign\n   * @param {number} groupId\n   *\n   * @returns {string} Seed value\n   */\n  getBucketingSeed: (userId, campaign, groupId) => {\n    if (groupId) {\n      return `${groupId}_${userId}`;\n    }\n\n    if (campaign && campaign.isBucketingSeedEnabled) {\n      return `${campaign.id}_${userId}`;\n    } else {\n      return userId;\n    }\n  }\n};\n\nmodule.exports = CampaignUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VariationDecider = require('../core/VariationDecider');\nconst BucketingService = require('../core/BucketingService');\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FunctionUtil = require('./FunctionUtil');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst StatusEnum = require('../enums/StatusEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst SegmentEvaluator = require('../core/SegmentEvaluator');\nconst HooksManager = require('../services/HooksManager');\nconst HooksEnum = require('../enums/HooksEnum');\nconst UuidUtil = require('./UuidUtil');\nconst Constants = require('../constants');\nconst CampaignTypeEnum = require('../enums/CampaignTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst file = FileNameEnum.DecisionUtil;\n\nconst SegmentationTypeEnum = {\n  WHITELISTING: 'whitelisting',\n  PRE_SEGMENTATION: 'pre-segmentation'\n};\n\nlet DecisionUtil = {\n  // PUBLIC METHODS\n  /**\n   *  1. Checks if there is a variation stored in userStorage, returns it\n   *  2. If Whitelisting is applicable, evaluate it, if any eligible variation is found, store it in User Storage service and return, otherwise skip it.\n   *  3. Check if the campaign is part of mutually exclusive group, if yes, get the winner campaign using campaign traffic normalization.\n   *  4. If Pre-segmentation is applied and passes then go further otherwise return early and no further processing\n   *  5. If no user storage value, no whitelisted variation and pre-segmentation evaluates to true, get variation using hashing logic if campaign traffic passes for that userId\n   *\n   *\n   *  @param {Object} config\n   *  @param {Object} settingsFile\n   *  @param {Object} campaign\n   *  @param {Object} campaignKey\n   *  @param {String} userId\n   *  @param {Object} customVariables\n   *  @param {Object} variationTargetingVariables\n   *\n   *  @return {Object|null} - Object if a variation is assigned, otherwise null\n   */\n  getVariation: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables = {},\n    userStorageData = {},\n    metaData,\n    isTrackUserAPI,\n    newGoalIdentifier,\n    api = ''\n  ) => {\n    let vwoUserId = UuidUtil.generateFor(userId, settingsFile.accountId);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_UUID, {\n        file: FileNameEnum.UuidUtil,\n        userId,\n        accountId: settingsFile.accountId,\n        uuid: vwoUserId\n      })\n    );\n\n    let decision = {\n      // campaign info\n      campaignId: campaign.id,\n      campaignKey,\n      campaignType: campaign.type,\n      campaignName: campaign.name,\n      // campaign segmentation conditions\n      customVariables,\n      // event name\n      event: HooksEnum.DECISION_TYPES.CAMPAIGN_DECISION,\n      // goal tracked in case of track API\n      goalIdentifier: newGoalIdentifier,\n      // campaign whitelisting flag\n      isForcedVariationEnabled: campaign.isForcedVariationEnabled,\n      sdkVersion: Constants.SDK_VERSION,\n      // API name which triggered the event\n      source: api,\n      // Passed in API\n      userId,\n      // Campaign Whitelisting conditions\n      variationTargetingVariables,\n      // VWO generated UUID based on passed UserId and Account ID\n      vwoUserId\n    };\n\n    // check if the campaign is a part of group\n    const { groupId, groupName } = CampaignUtil.isPartOfGroup(settingsFile, campaign.id);\n\n    if (groupId) {\n      // append groupId and groupName, if campaign is a part of group\n      decision['groupId'] = groupId;\n      decision['groupName'] = groupName;\n    }\n\n    variationTargetingVariables = Object.assign({}, variationTargetingVariables, {\n      _vwoUserId: campaign.isUserListEnabled ? vwoUserId : userId\n    });\n\n    // check if tbe campaign satisfies the whitelisting before checking for the group\n    const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n      campaign,\n      campaignKey,\n      userId,\n      variationTargetingVariables,\n      decision\n    );\n    if (whitelistedVariation) {\n      return whitelistedVariation;\n    }\n\n    // check if the campaign is present in the storage before checking for the group\n    const storedVariation = DecisionUtil._checkForUserStorage(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      userStorageData,\n      isTrackUserAPI,\n      decision\n    );\n    if (storedVariation) {\n      return storedVariation;\n    }\n\n    // check if the called campaign satisfies the pre-segmentatin before further proccessing.\n    if (\n      !(\n        DecisionUtil._checkForPreSegmentation(campaign, campaignKey, userId, customVariables, decision) &&\n        BucketingService.isUserPartOfCampaign(userId, campaign, true)\n      )\n    ) {\n      return {};\n    }\n\n    if (groupId) {\n      // mutually exclusive group exists\n\n      // get the list of the all the campaigns in a group\n      const campaignList = CampaignUtil.getGroupCampaigns(settingsFile, groupId);\n\n      if (campaignList.length === 0) {\n        // return if no campaigns are active in a group\n        return {};\n      }\n\n      // checking other campaigns for whitelisting and user storage.\n      let isWhitelistedOrStoredVariation = DecisionUtil._checkForStorageAndWhitelisting(\n        config,\n        settingsFile,\n        groupName,\n        campaignList,\n        campaign,\n        userId,\n        userStorageData,\n        variationTargetingVariables,\n        isTrackUserAPI\n      );\n\n      if (isWhitelistedOrStoredVariation) {\n        // other campaigns satisfy the whitelisting or storage, therfore returning\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_CALLED_CAMPAIGN_NOT_WINNER, {\n            userId,\n            groupName,\n            file,\n            campaignKey: campaignKey\n          })\n        );\n        return {};\n      }\n\n      // none of the group campaigns satisfy whitelisting or user storage\n      // check each campaign for pre-segmentation and traffic allocation.\n      let inEligibleCampaignKeys = '';\n      let eligibleCampaignKeys = '';\n      const { eligibleCampaigns, inEligibleCampaigns } = DecisionUtil.getEligbleCampaigns(\n        campaignList,\n        userId,\n        customVariables\n      );\n\n      inEligibleCampaigns.forEach(campaign => {\n        inEligibleCampaignKeys = inEligibleCampaignKeys + campaign.key + ',';\n      });\n      eligibleCampaigns.forEach(campaign => {\n        eligibleCampaignKeys = eligibleCampaignKeys + campaign.key + ',';\n      });\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.MEG_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          eligibleCampaignKeys: eligibleCampaignKeys.slice(0, -1),\n          inEligibleText:\n            inEligibleCampaignKeys === '' ? 'no campaigns' : `campaigns: ${inEligibleCampaignKeys.slice(0, -1)}`\n        })\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_ELIGIBLE_CAMPAIGNS, {\n          userId,\n          groupName,\n          file,\n          noOfEligibleCampaigns: eligibleCampaigns.length,\n          noOfGroupCampaigns: inEligibleCampaigns.length + eligibleCampaigns.length\n        })\n      );\n\n      if (eligibleCampaigns.length === 1) {\n        // if the called campaign is the only winner.\n        return DecisionUtil.evaluateTrafficAndGetVariation(\n          config,\n          eligibleCampaigns[0],\n          eligibleCampaigns[0].key,\n          userId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      } else {\n        // normalize the eligible campaigns and decide winner\n        return DecisionUtil._normalizeAndFindWinningCampaign(\n          config,\n          campaign,\n          eligibleCampaigns,\n          userId,\n          groupName,\n          groupId,\n          metaData,\n          newGoalIdentifier,\n          decision\n        );\n      }\n    } else {\n      // campaign is not a part of mutually exclusive group\n      // check if the user is eligible to become part of the campaign and assign variation.\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        campaign,\n        campaignKey,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    }\n  },\n  // PRIVATE METHODS\n\n  _evaluateWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, disableLogs = false) => {\n    let whitelistedVariation;\n    let status;\n    const targetedVariations = [];\n    campaign.variations.forEach(variation => {\n      if (DataTypeUtil.isObject(variation.segments) && !Object.keys(variation.segments).length) {\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n            campaignKey,\n            userId,\n            file,\n            variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `, for ${variation.name}`\n          }),\n          disableLogs\n        );\n        return;\n      }\n      if (\n        DataTypeUtil.isObject(variation.segments) &&\n        SegmentEvaluator(variation.segments, variationTargetingVariables, campaignKey, userId, variation.name)\n      ) {\n        status = StatusEnum.PASSED;\n        targetedVariations.push(FunctionUtil.cloneObject(variation));\n      } else {\n        status = StatusEnum.FAILED;\n      }\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation:\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT && status === StatusEnum.PASSED\n              ? 'and becomes part of the rollout'\n              : `for ${variation.name}`\n        }),\n        disableLogs\n      );\n    });\n\n    if (targetedVariations.length > 1) {\n      CampaignUtil.scaleVariationWeights(targetedVariations);\n      for (let i = 0, currentAllocation = 0, stepFactor = 0; i < targetedVariations.length; i++) {\n        stepFactor = CampaignUtil.assignRangeValues(targetedVariations[i], currentAllocation);\n        currentAllocation += stepFactor;\n      }\n      whitelistedVariation = BucketingService._getVariation(\n        targetedVariations,\n        BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, campaign))\n      );\n    } else {\n      whitelistedVariation = targetedVariations[0];\n    }\n\n    if (whitelistedVariation) {\n      return {\n        variation: whitelistedVariation,\n        variationName: whitelistedVariation.name,\n        variationId: whitelistedVariation.id\n      };\n    }\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation and goalIdentifier settings object otherwise null\n   */\n  _getStoredVariationAndGoalIdentifiers: function(\n    config,\n    settingsFile,\n    campaignKey,\n    userId,\n    userStorageData,\n    disableLogs = false\n  ) {\n    let userData = DecisionUtil._getStoredUserData(config, userId, campaignKey, userStorageData, disableLogs);\n    let { variationName, goalIdentifier } = userData;\n\n    if (userData && userData.campaignKey && variationName) {\n      return {\n        storedVariation: CampaignUtil.getCampaignVariation(settingsFile, campaignKey, variationName),\n        goalIdentifier\n      };\n    }\n\n    // Log if stored variation is not found even after implementing UserStorageService\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NO_STORED_DATA, {\n        file,\n        campaignKey,\n        userId\n      }),\n      disableLogs\n    );\n\n    return null;\n  },\n  /**\n   * If userStorageService is provided and variation was stored, get the stored variation\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile - cloned settingsFile\n   * @param {String} campaignKey\n   * @param {String} userId\n   *\n   * @return {Object|null} - if found then variation settings object otherwise null\n   */\n  _getStoredVariation: function(config, settingsFile, campaignKey, userId, userStorageData) {\n    const data = DecisionUtil._getStoredVariationAndGoalIdentifiers(\n      config,\n      settingsFile,\n      campaignKey,\n      userId,\n      userStorageData\n    );\n    if (data && data.storedVariation) {\n      return data.storedVariation;\n    }\n    return null;\n  },\n  /**\n   * Get the User Variation mapping by calling get method of UserStorageService being provided\n   *\n   * @param {Object} config\n   * @param {String} UserID\n   * @param {String} campaignKey\n   *\n   * @return {Object} - User Campaign Mapping\n   */\n  _getStoredUserData: function(config, userId, campaignKey, userStorageData, disableLogs) {\n    let userStorageMap = {\n      userId: userId,\n      variationName: null,\n      campaignKey: campaignKey,\n      goalIdentifier: null\n    };\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NOT_CONFIGURED, {\n          file\n        }),\n        disableLogs\n      );\n      return userStorageMap;\n    }\n\n    try {\n      let data = config.userStorageService.get(userId, campaignKey) || {};\n\n      // if data found\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId,\n          campaignKey\n        }),\n        disableLogs\n      );\n\n      return Object.assign({}, data, userStorageData);\n    } catch (err) {\n      // if no data found\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_STORAGE_SERVICE_GET_FAILED, {\n          file,\n          userId,\n          error: err\n        }),\n        disableLogs\n      );\n    }\n  },\n\n  /**\n   * If UserStorageService is provided and variation was stored, save the assigned variation\n   *\n   * @param {Object} campaign\n   * @param {String} variationName\n   * @param {String} userId\n   *\n   * @return {Boolean} - true if found otherwise false\n   */\n  _saveUserData: function(config, campaign, variationName, userId, metaData, goalIdentifier) {\n    let isSaved = false;\n\n    if (!config.userStorageService) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_STORAGE_SERVICE_NOT_CONFIGURED, {\n          file\n        })\n      );\n      return isSaved;\n    }\n\n    try {\n      const properties = {\n        userId: userId,\n        variationName,\n        campaignKey: campaign.key\n      };\n\n      if (!DataTypeUtil.isUndefined(goalIdentifier)) {\n        properties.goalIdentifier = goalIdentifier;\n      }\n\n      if (!DataTypeUtil.isUndefined(metaData)) {\n        properties.metaData = metaData;\n      }\n\n      config.userStorageService.set(properties);\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SETTING_DATA_USER_STORAGE_SERVICE, {\n          file,\n          userId,\n          campaignKey: campaign.key\n        })\n      );\n\n      isSaved = true;\n    } catch (err) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_STORAGE_SERVICE_SET_FAILED, {\n          file,\n          userId,\n          error: err\n        })\n      );\n\n      isSaved = false;\n    }\n\n    return isSaved;\n  },\n\n  /**\n   * Evaluate the campaign for whitelisting and store\n   * This method would be run only for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Array} campaignList\n   * @param {Object} calledCampaign\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Object} variationTargetingVariables\n   * @param {Boolean} isTrackUserAPI\n   *\n   * @returns {Boolean} - true, if whitelisting/storage is satisfied for any campaign\n   */\n  _checkForStorageAndWhitelisting(\n    config,\n    settingsFile,\n    groupName,\n    campaignList,\n    calledCampaign,\n    userId,\n    userStorageData,\n    variationTargetingVariables,\n    isTrackUserAPI\n  ) {\n    let otherCampaignWinner = false;\n    campaignList.some(groupCampaign => {\n      if (groupCampaign.id === calledCampaign.id) {\n        return;\n      }\n      // create a local copy of the campaigns\n      // groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n      // checking other campaigns for whitelisting or user storage.\n      const whitelistedVariation = DecisionUtil._checkForWhitelisting(\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        variationTargetingVariables\n      );\n      if (whitelistedVariation) {\n        // other campaign satisfy the whitelisting\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'whitelisting'\n          })\n        );\n        return true;\n      }\n      const storedVariation = DecisionUtil._checkForUserStorage(\n        config,\n        settingsFile,\n        groupCampaign,\n        groupCampaign.key,\n        userId,\n        userStorageData,\n        isTrackUserAPI\n      );\n      if (storedVariation && DataTypeUtil.isObject(storedVariation) && Object.keys(storedVariation).length > 0) {\n        // other campaign sastisfy the user storage\n        otherCampaignWinner = true;\n        logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OTHER_CAMPAIGN_SATISFIES_WHITELISTING_STORAGE, {\n            file,\n            campaignKey: groupCampaign.key,\n            groupName,\n            userId,\n            type: 'user storage'\n          })\n        );\n        return true;\n      }\n    });\n    return otherCampaignWinner;\n  },\n\n  /**\n   * Evaluate a campaign for pre-segmentation.\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} decision\n   *\n   * @returns {Boolean} true, if the pre-segmentation is satisfied.\n   */\n  _checkForPreSegmentation: (campaign, campaignKey, userId, customVariables, decision) => {\n    let status;\n    if (DataTypeUtil.isObject(campaign.segments) && !Object.keys(campaign.segments).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n      return true;\n    } else {\n      const preSegmentationResult = SegmentEvaluator(\n        campaign.segments,\n        customVariables,\n        campaignKey,\n        userId,\n        !decision\n      );\n      if (!preSegmentationResult) {\n        status = StatusEnum.FAILED;\n      } else {\n        status = StatusEnum.PASSED;\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(customVariables || {}),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.PRE_SEGMENTATION,\n          variation: ''\n        }),\n        !decision\n      );\n\n      if (status === StatusEnum.FAILED) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n\n  /**\n   * Check if user is eligible for the camapign based on traffic percentage and assign variation.\n   * @param {Object} config\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   * @returns {Object} variation assigned to the user\n   */\n  evaluateTrafficAndGetVariation(config, campaign, campaignKey, userId, metaData, newGoalIdentifier, decision) {\n    let variation, variationName, variationId;\n    // Use our core's VariationDecider utility to get the deterministic variation assigned to the userId for that campaign\n    ({ variation, variationName, variationId } = VariationDecider.getVariationAllotted(userId, campaign));\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_ALLOCATION_STATUS, {\n        file,\n        campaignKey,\n        userId,\n        status: variationName ? `got variation:${variationName}` : 'did not get any variation'\n      })\n    );\n\n    // Check if variation-name has been assigned to the userId. If not, return no variation\n    if (variationName) {\n      // If userStorageService is provided, look into it for the saved variation for the campaign and userId\n      DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, newGoalIdentifier);\n    }\n\n    // Executing the callback when SDK makes the decision\n    HooksManager.execute(\n      Object.assign(\n        {\n          fromUserStorageService: false,\n          isUserWhitelisted: false\n        },\n        campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n          ? {\n              isFeatureEnabled: !!variationName\n            }\n          : {\n              variationName,\n              variationId\n            },\n        decision\n      )\n    );\n\n    return {\n      variation: variation && variation.variation,\n      variationName,\n      variationId\n    };\n  },\n\n  /**\n   * Evaluate a campaign for whitelisting\n   *\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} variationTargetingVariables\n   * @param {Object} decision\n   *\n   * @returns {Object} whitelisted variation\n   */\n  _checkForWhitelisting: (campaign, campaignKey, userId, variationTargetingVariables, decision) => {\n    let status;\n    let variationName, variationId;\n    if (campaign.isForcedVariationEnabled) {\n      let whitelistingResult = DecisionUtil._evaluateWhitelisting(\n        campaign,\n        campaignKey,\n        userId,\n        variationTargetingVariables,\n        !decision\n      );\n      let variationString;\n      if (whitelistingResult) {\n        status = StatusEnum.PASSED;\n        variationString = whitelistingResult.variationName;\n      } else {\n        status = StatusEnum.FAILED;\n        variationString = '';\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SEGMENTATION_STATUS, {\n          campaignKey,\n          userId,\n          customVariables: JSON.stringify(variationTargetingVariables),\n          file,\n          status,\n          segmentationType: SegmentationTypeEnum.WHITELISTING,\n          variation: campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT ? '' : `for variation: ${variationString}`\n        }),\n        !decision\n      );\n\n      if (whitelistingResult) {\n        variationName = whitelistingResult.variationName;\n        variationId = whitelistingResult.variationId;\n        // Executing the callback when SDK has made a decision in case of whitelisting\n        if (decision) {\n          HooksManager.execute(\n            Object.assign(\n              {\n                fromUserStorageService: false,\n                isUserWhitelisted: !!variationName\n              },\n              campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n                ? {\n                    isFeatureEnabled: !!variationName\n                  }\n                : {\n                    variationName,\n                    variationId\n                  },\n              decision\n            )\n          );\n        }\n        return whitelistingResult;\n      }\n    } else {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.WHITELISTING_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        !decision\n      );\n    }\n  },\n\n  /**\n   * Check if the variation is present in the user storage\n   *\n   * @param {Object} config\n   * @param {Object} settingsFile\n   * @param {Object} campaign\n   * @param {String} campaignKey\n   * @param {String} userId\n   * @param {Object} userStorageData\n   * @param {Boolean} isTrackUserAPI\n   * @param {Object} decision\n   *\n   * @returns {Object} stored variaition\n   */\n  _checkForUserStorage: (\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    userStorageData,\n    isTrackUserAPI,\n    decision\n  ) => {\n    let variationName, variationId;\n    let storedVariation, goalIdentifier;\n    // If userStorageService is used, get the variation from the stored data\n    ({ storedVariation, goalIdentifier } =\n      DecisionUtil._getStoredVariationAndGoalIdentifiers(\n        config,\n        settingsFile,\n        campaign.key,\n        userId,\n        userStorageData,\n        !decision\n      ) || {});\n\n    // If stored variation is found, simply return the same\n    if (storedVariation) {\n      variationName = storedVariation.name;\n      variationId = storedVariation.id;\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.GOT_STORED_VARIATION, {\n          file,\n          campaignKey,\n          userId,\n          variationName: storedVariation.name\n        }),\n        !decision\n      );\n\n      // Executing the callback when SDK gets the decision from user storage service\n      if (decision) {\n        HooksManager.execute(\n          Object.assign(\n            {\n              fromUserStorageService: !!variationName,\n              isUserWhitelisted: false\n            },\n            campaign.type === CampaignTypeEnum.FEATURE_ROLLOUT\n              ? {\n                  isFeatureEnabled: !!variationName\n                }\n              : {\n                  variationName,\n                  variationId\n                },\n            decision\n          )\n        );\n      }\n\n      return {\n        variation: storedVariation,\n        variationName: storedVariation.name,\n        variationId: storedVariation.id,\n        storedGoalIdentifier: goalIdentifier,\n        isStoredVariation: true\n      };\n    } else if (\n      !DataTypeUtil.isUndefined(config.userStorageService) &&\n      !isTrackUserAPI &&\n      DataTypeUtil.isUndefined(storedVariation)\n    ) {\n      logger.log(\n        LogLevelEnum.WARN,\n        LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          api: config.apiName\n        }),\n        !decision\n      );\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_NOT_ACTIVATED, {\n          file,\n          campaignKey,\n          userId,\n          reason: config.apiName === ApiEnum.TRACK ? 'track it' : 'get the decision/value'\n        }),\n        !decision\n      );\n      return {};\n    }\n  },\n\n  /**\n   * Evaluate the list of campaigns for pre-segmentation and campaign traffic allocation and assign variation to the user.\n   * This method will be used for MEG campaigns\n   *\n   * @param {Object} config\n   * @param {Array} campaignList\n   * @param {String} userId\n   * @param {Object} customVariables\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   *\n   * @returns {Array} list of campaigns which satisfies the conditions.\n   */\n  getEligbleCampaigns(campaignList, userId, customVariables) {\n    let eligibleCampaigns = [];\n    let inEligibleCampaigns = [];\n\n    campaignList.forEach(groupCampaign => {\n      const isPartOfCampaign =\n        DecisionUtil._checkForPreSegmentation(groupCampaign, groupCampaign.key, userId, customVariables) &&\n        BucketingService.isUserPartOfCampaign(userId, groupCampaign, true);\n      if (isPartOfCampaign) {\n        groupCampaign = FunctionUtil.cloneObject(groupCampaign);\n        // campaign satisfies the pre-segmentation\n        eligibleCampaigns.push(groupCampaign);\n      } else {\n        inEligibleCampaigns.push(groupCampaign);\n      }\n    });\n\n    return {\n      eligibleCampaigns,\n      inEligibleCampaigns\n    };\n  },\n\n  /**\n   * Equally distribute the traffic of campaigns and assign a winner campaign by murmur hash.\n   *\n   * @param {Object} config\n   * @param {Object} calledCampaign\n   * @param {Array} shortlistedCampaigns\n   * @param {String} userId\n   * @param {Object} metaData\n   * @param {String} newGoalIdentifier\n   * @param {Object} decision\n   *\n   * @returns {Object} variation of the winner campaign\n   */\n  _normalizeAndFindWinningCampaign(\n    config,\n    calledCampaign,\n    shortlistedCampaigns,\n    userId,\n    groupName,\n    groupId,\n    metaData,\n    newGoalIdentifier,\n    decision\n  ) {\n    // normalise the weights of all the shortlisted campaigns\n    shortlistedCampaigns.forEach(campaign => {\n      campaign.weight = Math.floor(100 / shortlistedCampaigns.length);\n    });\n\n    // re-distribute the traffic for each camapign\n    CampaignUtil.setCampaignAllocation(shortlistedCampaigns);\n\n    let winnerCampaign = BucketingService._getVariation(\n      shortlistedCampaigns,\n      BucketingService.calculateBucketValue(CampaignUtil.getBucketingSeed(userId, undefined, groupId))\n    );\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_GOT_WINNER_CAMPAIGN, {\n        userId,\n        groupName,\n        file,\n        campaignKey: winnerCampaign.key\n      })\n    );\n\n    if (winnerCampaign.id === calledCampaign.id) {\n      // if called campaign is the winner campaign, get the variation for the campaign\n      return DecisionUtil.evaluateTrafficAndGetVariation(\n        config,\n        winnerCampaign,\n        winnerCampaign.key,\n        userId,\n        metaData,\n        newGoalIdentifier,\n        decision\n      );\n    } else {\n      // if winning campaign not the called camapaign, return\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.MEG_CALLED_CAMPAIGN_NOT_WINNER, {\n          userId,\n          groupName,\n          file,\n          campaignKey: calledCampaign.key\n        })\n      );\n      return {};\n    }\n  }\n};\n\nmodule.exports = DecisionUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GoalTypeEnum = {\n  REVENUE: 'REVENUE_TRACKING',\n  CUSTOM: 'CUSTOM_GOAL',\n  ALL: 'ALL'\n};\n\nmodule.exports = GoalTypeEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ObjectUtil = {\n  areObjectKeys: (obj = {}) => {\n    return Object.keys(obj).length;\n  },\n  getKeyValue: obj => {\n    if (!ObjectUtil.areObjectKeys(obj)) {\n      return;\n    }\n    let key = Object.keys(obj)[0];\n    let value = obj[key];\n    return {\n      key,\n      value\n    };\n  },\n  objectValues: obj => {\n    return Object.keys(obj).map(key => obj[key]);\n  }\n};\n\nmodule.exports = ObjectUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\n\nconst UuidUtil = require('./UuidUtil');\nconst ValidateUtil = require('./ValidateUtil');\nconst FunctionUtil = require('./FunctionUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst UrlService = require('../services/UrlService');\n/**\n * Return primary properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns primary properties\n */\nfunction getPrimaryProperties(configObj, userId) {\n  return {\n    sId: FunctionUtil.getCurrentUnixTimestamp(),\n    u: UuidUtil.generateFor(userId, configObj.accountId)\n  };\n}\n\n/**\n * Return base properties required for every network call to VWO server\n * @param {Object} configObj\n * @param {String} userId\n *\n * @returns base properties\n */\nfunction getBaseProperties(configObj, userId) {\n  const { accountId } = configObj;\n\n  return Object.assign({}, getPrimaryProperties(configObj, userId), ImpressionUtil.getReportingProperties(configObj), {\n    account_id: accountId,\n    random: FunctionUtil.getRandomNumber(),\n    ap: Constants.PLATFORM\n  });\n}\n\nlet ImpressionUtil = {\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildEventForPushing(configObj, tagKey, tagValue, userId) {\n    const properties = Object.assign({}, getBaseProperties(configObj, userId));\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.PUSH;\n    properties.tags = JSON.stringify({\n      u: {\n        [encodeURIComponent(tagKey)]: encodeURIComponent(tagValue)\n      }\n    });\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} tagKey the tag name\n   * @param {String} tagValue the tag value\n   */\n  buildBatchEventForPushing(configObj, tagKey, tagValue, userId) {\n    if (typeof process.env !== 'undefined') {\n      const properties = Object.assign({}, getPrimaryProperties(configObj, userId));\n      properties.eT = 3;\n      properties.t = encodeURIComponent(\n        JSON.stringify({\n          u: {\n            [tagKey]: tagValue\n          }\n        })\n      );\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_PUSH, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingUser(configObj, campaignKey, variationId, userId, usageStats) {\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId),\n      usageStats\n    );\n    properties.ed = JSON.stringify({ p: 'server' });\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.TRACK_USER;\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingUser(configObj, campaignKey, variationId, userId) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 1;\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_USER, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n  /**\n   * Build properties for the impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    const goalId = goal.id;\n\n    let properties = Object.assign(\n      {\n        experiment_id: campaignKey,\n        combination: variationId\n      },\n      getBaseProperties(configObj, userId)\n    );\n\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.TRACK_GOAL;\n\n    properties['goal_id'] = goalId;\n    if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n      properties['r'] = revenue;\n    }\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n        file: FileNameEnum.ImpressionUtil,\n        properties: this._getStringifiedLogProperties(properties)\n      })\n    );\n\n    return properties;\n  },\n  /**\n   * Build properties for the bulk impression event\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {String} campaignKey, the Campaign ID\n   * @param {Number} variationId, the Variation ID\n   * @param {String} goalId, the Goal ID\n   * @param {String} revenue, the revenue generated on conversion\n   *\n   * @return null if campaign ID or variation ID is invalid\n   */\n  buildBatchEventForTrackingGoal(configObj, campaignKey, variationId, userId, goal = {}, revenue = null) {\n    if (typeof process.env !== 'undefined') {\n      let properties = Object.assign(\n        {\n          e: campaignKey,\n          c: variationId\n        },\n        getPrimaryProperties(configObj, userId)\n      );\n      properties.eT = 2;\n\n      properties.g = goal.id;\n      if (goal.type === GoalTypeEnum.REVENUE && ValidateUtil.isValidValue(revenue)) {\n        properties.r = revenue;\n      }\n\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_TRACK_GOAL, {\n          file: FileNameEnum.ImpressionUtil,\n          properties: JSON.stringify(properties)\n        })\n      );\n\n      return properties;\n    }\n  },\n\n  /**\n   * Return an object containing properties required for segmenting reports\n   * @param {Object} configObj\n   * @returns reporting properties\n   */\n  getReportingProperties(configObj) {\n    const { sdkKey } = configObj;\n\n    return {\n      [Constants.SDK_QUERY_PARAM]: Constants.SDK_NAME,\n      [Constants.SDK_VERSION_QUERY_PARAM]: Constants.SDK_VERSION,\n      env: sdkKey\n    };\n  },\n\n  /**\n   * Builds generic properties for different tracking calls required by VWO servers.\n   * @param {Object} configObj\n   * @param {String} eventName\n   * @returns properties\n   */\n  getEventsBaseProperties(config, eventName, usageStats = {}) {\n    const { sdkKey } = config;\n\n    let properties = Object.assign(\n      {\n        en: eventName,\n        a: config.accountId,\n        env: sdkKey,\n        eTime: FunctionUtil.getCurrentUnixTimestampInMillis(),\n        random: FunctionUtil.getRandomNumber(),\n        p: 'FS'\n      },\n      usageStats\n    );\n\n    properties.url = Constants.HTTPS_PROTOCOL + UrlService.getBaseUrl() + UrlEnum.EVENTS;\n    return properties;\n  },\n\n  /**\n   * Builds generic payload required by all the different tracking calls.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} usageStats\n   * @returns properties\n   */\n  getEventBasePayload(configObj, userId, eventName) {\n    const uuid = UuidUtil.generateFor(userId, configObj.accountId);\n    const { sdkKey } = configObj;\n\n    let props = {\n      sdkName: Constants.SDK_NAME,\n      sdkVersion: Constants.SDK_VERSION,\n      $visitor: {\n        props: {\n          vwo_fs_environment: sdkKey\n        }\n      }\n    };\n\n    // if (usageStats) {\n    //   props = Object.assign({}, props, usageStats);\n    // }\n\n    let properties = {\n      d: {\n        msgId: `${uuid}-${FunctionUtil.getCurrentUnixTimestamp()}`,\n        visId: uuid,\n        sessionId: FunctionUtil.getCurrentUnixTimestamp(),\n        event: {\n          props: props,\n          name: eventName,\n          time: FunctionUtil.getCurrentUnixTimestampInMillis()\n        },\n        visitor: {\n          props: {\n            vwo_fs_environment: sdkKey\n          }\n        }\n      }\n    };\n\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the visitor.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {String} campaignId\n   * @param {Number} variationId\n   * @returns track-user payload\n   */\n  getTrackUserPayloadData(configObj, userId, eventName, campaignId, variationId) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    properties.d.event.props.id = campaignId;\n    properties.d.event.props.variation = variationId;\n\n    // this is currently required by data-layer team, we can make changes on DACDN and remove it from here\n    properties.d.event.props.isFirst = 1;\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_USER, {\n        file: FileNameEnum.ImpressionUtil,\n        accountId: configObj.accountId,\n        userId,\n        campaignId\n      })\n    );\n\n    return properties;\n  },\n\n  /**\n   * Builds payload to track the Goal.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} metricMap\n   * @param {String} revenueValue\n   * @returns track-goal payload\n   */\n  getTrackGoalPayloadData(\n    configObj,\n    userId,\n    eventName,\n    metricMap,\n    revenueValue,\n    revenuePropList,\n    eventProperties = {}\n  ) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    let metric = {};\n    Object.keys(metricMap).forEach(key => {\n      metric[`id_${key}`] = [`g_${metricMap[key].goal.id}`];\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_TRACK_GOAL, {\n          file: FileNameEnum.ImpressionUtil,\n          goalName: eventName,\n          accountId: configObj.accountId,\n          u: userId,\n          campaignId: key\n        })\n      );\n    });\n\n    properties.d.event.props.vwoMeta = {\n      metric: metric\n    };\n\n    if (revenuePropList && revenueValue && revenuePropList.size > 0) {\n      revenuePropList.forEach(revenueProp => {\n        properties.d.event.props.vwoMeta[revenueProp] = revenueValue;\n      });\n    }\n\n    properties.d.event.props.isCustomEvent = true;\n\n    if (Object.keys(eventProperties).length > 0) {\n      for (const prop in eventProperties) {\n        properties.d.event.props[prop] = eventProperties[prop];\n      }\n    }\n\n    return properties;\n  },\n\n  /**\n   * Builds payload to appply post segmentation on VWO campaign reports.\n   * @param {Object} configObj\n   * @param {String} userId\n   * @param {String} eventName\n   * @param {Object} customDimensionMap\n   * @returns push payload\n   */\n  getPushPayloadData(configObj, userId, eventName, customDimensionMap) {\n    const properties = this.getEventBasePayload(configObj, userId, eventName);\n\n    properties.d.event.props.isCustomEvent = true;\n\n    Object.keys(customDimensionMap).forEach(function(key) {\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n      properties.d.event.props.$visitor.props[key] = tagValue;\n      properties.d.visitor.props[key] = tagValue;\n    });\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.IMPRESSION_FOR_EVENT_ARCH_PUSH, {\n        file: FileNameEnum.ImpressionUtil,\n        accountId: configObj.accountId,\n        userId,\n        property: JSON.stringify(customDimensionMap)\n      })\n    );\n\n    return properties;\n  },\n\n  /**\n   * Remove the sensitive keys from the properties to te displayed in the log.\n   * @param {Object} properties\n   * @returns properties without sensitive keys\n   */\n  _getStringifiedLogProperties(properties) {\n    const logProperties = Object.assign({}, properties);\n    delete logProperties.env;\n    return JSON.stringify(logProperties);\n  }\n};\n\nmodule.exports = ImpressionUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EventEnum = {\n  VWO_VARIATION_SHOWN: 'vwo_variationShown',\n  VWO_SYNC_VISITOR_PROP: 'vwo_syncVisitorProp'\n};\n\nmodule.exports = EventEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst UrlEnum = {\n  BASE_URL: 'dev.visualwebsiteoptimizer.com',\n  SETTINGS_URL: '/server-side/settings',\n  WEBHOOK_SETTINGS_URL: '/server-side/pull',\n  TRACK_USER: '/server-side/track-user',\n  TRACK_GOAL: '/server-side/track-goal',\n  PUSH: '/server-side/push',\n  BATCH_EVENTS: '/server-side/batch-events',\n  EVENTS: '/events/t'\n};\n\nmodule.exports = UrlEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Hasher = require('murmurhash');\n\nconst Constants = require('../constants');\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.BucketingService;\n\nlet BucketingService = {\n  /**\n   * Generates Bucket Value of the User by hashing the User ID by murmurHash\n   * and scaling it down.\n   *\n   * @param {Number} hashValue the hashValue generated after hashing\n   * @param {Number} maxValue the value up-to which hashValue needs to be scaled\n   * @param {Number} multiplier multiplier in case the traffic allocation is less than 100\n   *\n   * @return {Number} bucket Value of the User\n   */\n  _generateBucketValue: (hashValue, maxValue, multiplier = 1) => {\n    const ratio = hashValue / Math.pow(2, 32);\n    const multipliedValue = (maxValue * ratio + 1) * multiplier;\n    const value = Math.floor(multipliedValue);\n\n    return value;\n  },\n\n  /**\n   * Returns the Variation by checking the Start and End Bucket Allocations of each Variation\n   *\n   * @param {Object} campaign which contains the variations\n   * @param {Number} bucketValue the bucket Value of the user\n   *\n   * @return {Object|null} variation data allotted to the user or null if not\n   */\n  _getVariation: (variations, bucketValue) => {\n    for (let i = 0; i < Object.keys(variations).length; i++) {\n      let variation = variations[i];\n\n      if (bucketValue >= variation.startVariationAllocation && bucketValue <= variation.endVariationAllocation) {\n        return variation;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Validates the User ID and generates Bucket Value of the User by hashing the userId by murmurHash and scaling it down.\n   *\n   * @param {String} userId the unique ID assigned to User\n   *\n   * @return {Number} the bucket Value allotted to User (between 1 to $this->$MAX_TRAFFIC_PERCENT)\n   */\n  _getBucketValueForUser: (seed, userId, disableLog) => {\n    let hashValue = Hasher.v3(seed, Constants.SEED_VALUE);\n    let bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_PERCENT);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_HASH_BUCKET_VALUE, {\n        file,\n        hashValue,\n        bucketValue,\n        userId\n      }),\n      disableLog\n    );\n\n    return bucketValue;\n  },\n\n  /**\n   * Calculate if this user should become part of the campaign or not\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign fot getting the value of traffic allotted to the campaign\n   *\n   * @return {Boolean} if User is a part of Campaign or not\n   */\n  isUserPartOfCampaign: (userId, campaign, disableLog = false) => {\n    if (!campaign) {\n      return false;\n    }\n\n    let trafficAllocation = campaign.percentTraffic;\n    let valueAssignedToUser = BucketingService._getBucketValueForUser(\n      CampaignUtil.getBucketingSeed(userId, campaign),\n      userId,\n      disableLog\n    );\n    let isUserPart = valueAssignedToUser !== 0 && valueAssignedToUser <= trafficAllocation;\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_CAMPAIGN_ELIGIBILITY, {\n        file,\n        userId,\n        campaignKey: campaign.key,\n        status: isUserPart ? 'eligible' : 'not eligible'\n      }),\n      disableLog\n    );\n\n    return isUserPart;\n  },\n\n  /**\n   * Validates the User ID and generates Variation into which the User is bucketed in.\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign the Campaign of which User is a part of\n   *\n   * @return {Object|null} variation data into which user is bucketed in or null if not\n   */\n  bucketUserToVariation: (userId, campaign) => {\n    let multiplier;\n    if (!ValidateUtil.isValidValue(userId)) {\n      return null;\n    }\n\n    if (!campaign) {\n      return null;\n    }\n    if (campaign.percentTraffic) {\n      multiplier = Constants.MAX_TRAFFIC_VALUE / campaign.percentTraffic / 100;\n    }\n\n    const hashValue = BucketingService._generateHashValue(\n      campaign.isBucketingSeedEnabled ? `${campaign.id}_${userId}` : userId\n    );\n    const bucketValue = BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n\n    logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.USER_CAMPAIGN_BUCKET_VALUES, {\n        file,\n        userId,\n        campaignKey: campaign.key,\n        percentTraffic: campaign.percentTraffic,\n        bucketValue,\n        hashValue\n      })\n    );\n    return BucketingService._getVariation(campaign.variations, bucketValue);\n  },\n  calculateBucketValue: (seed, multiplier = 1) => {\n    const hashValue = BucketingService._generateHashValue(seed);\n    return BucketingService._generateBucketValue(hashValue, Constants.MAX_TRAFFIC_VALUE, multiplier);\n  },\n  _generateHashValue: userId => {\n    return Hasher.v3(userId, Constants.SEED_VALUE);\n  }\n};\n\nmodule.exports = BucketingService;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = require('./AnsiColorEnum');\n\nconst LogNumberLevel = {\n  _0: 'NOTSET',\n  _1: 'DEBUG',\n  _2: 'INFO',\n  _3: 'WARN',\n  _4: 'ERROR'\n};\n\nconst LogLevelEnum = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4\n};\n\nconst LogLevelColorInfoEnum = {\n  [LogLevelEnum.NOTSET]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.WHITE}[NOTSET]:${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.DEBUG]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.LIGHTBLUE}[DEBUG]: ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.INFO]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.CYAN}[INFO]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.WARN]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.YELLOW}[WARN]:  ${AnsiColorEnum.RESET}`,\n  [LogLevelEnum.ERROR]: `${AnsiColorEnum.BOLD}${AnsiColorEnum.RED}[ERROR]: ${AnsiColorEnum.RESET}`\n};\n\nconst LogLevelInfoEnum = {\n  [LogLevelEnum.NOTSET]: `[NOTSET]:`,\n  [LogLevelEnum.DEBUG]: `[DEBUG]: `,\n  [LogLevelEnum.INFO]: `[INFO]:  `,\n  [LogLevelEnum.WARN]: `[WARN]:  `,\n  [LogLevelEnum.ERROR]: `[ERROR]: `\n};\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogLevelInfoEnum,\n  LogLevelColorInfoEnum\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignTypeEnum = {\n  FEATURE_TEST: 'FEATURE_TEST',\n  FEATURE_ROLLOUT: 'FEATURE_ROLLOUT',\n  AB: 'VISUAL_AB'\n};\n\nmodule.exports = CampaignTypeEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentOperandTypes = require('./SegmentOperandTypesEnum');\nconst SegmentOperatorTypes = require('./SegmentOperatorTypesEnum');\nconst SegmentOperandValueTypeRegexes = require('./SegmentOperandValueTypeRegexesEnum');\nconst SegmentOperandValues = require('./SegmentOperandValuesEnum');\n\nconst SegmentEnum = {\n  SegmentOperandTypes,\n  SegmentOperatorTypes,\n  SegmentOperandValueTypeRegexes,\n  SegmentOperandValues\n};\n\nmodule.exports = SegmentEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\n/**\n * Hooks Manager is responsible for triggering callbacks useful to the end-user based on certain lifecycle events.\n * Possible use with integrations when the user intends to send an event when a visitor is part of the experiment.\n */\nconst HooksManager = {\n  /**\n   * Initializes with configuration from VWO Object.\n   * @param {Object} config\n   */\n  init(config = {}) {\n    this.callback = config.integrations && config.integrations.callback;\n  },\n  /**\n   * Executes the callback\n   * @param {Object} properties Properties from the callback\n   */\n  execute(properties) {\n    if (DataTypeUtil.isFunction(this.callback)) {\n      this.callback(properties);\n    }\n  }\n};\n\nmodule.exports = HooksManager;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst uuidv5 = require('uuid/v5');\nconst Constants = require('../constants');\n\nconst VWO_NAMESPACE = uuidv5(Constants.SEED_URL, uuidv5.URL);\n\nconst UuidUtil = {\n  generateFor: (userId, accountId) => {\n    userId = `${userId}`; // type-cast\n    const hash = `${accountId}`;\n    const userIdNamespace = UuidUtil.generate(hash, VWO_NAMESPACE);\n    const uuidForUserIdAccountId = UuidUtil.generate(userId, userIdNamespace);\n\n    let desiredUuid = uuidForUserIdAccountId.replace(/-/gi, '').toUpperCase();\n\n    return desiredUuid;\n  },\n  generate: (name, namespace) => {\n    if (!name || !namespace) {\n      return;\n    }\n\n    return uuidv5(name, namespace);\n  }\n};\n\nmodule.exports = UuidUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst UrlEnum = require('../enums/UrlEnum');\nconst { isString } = require('../utils/DataTypeUtil');\n\nconst UrlService = {\n  init({ collectionPrefix } = {}) {\n    if (collectionPrefix && isString(collectionPrefix)) {\n      UrlService.collectionPrefix = collectionPrefix;\n    }\n\n    return UrlService;\n  },\n\n  getBaseUrl() {\n    const baseUrl = UrlEnum.BASE_URL;\n\n    if (UrlService.collectionPrefix) {\n      return `${baseUrl}/${UrlService.collectionPrefix}`;\n    }\n\n    return baseUrl;\n  }\n};\n\nmodule.exports = UrlService;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('./FunctionUtil');\nconst { isObject, isFunction } = require('./DataTypeUtil');\n\nconst FetchUtil = {\n  _getStoredSettings: function(userStorageService) {\n    let isStoredData = false;\n    let parsedSettings;\n\n    if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.getSettings)) {\n      try {\n        const settings = userStorageService.getSettings();\n        parsedSettings = JSON.parse(settings);\n\n        if (parsedSettings && isObject(parsedSettings) && Object.keys(parsedSettings).length > 3) {\n          const info = `VWO-SDK - [INFO]: ${getCurrentTime()} VWO settings found in Storage Service.`;\n\n          console.info(info);\n\n          isStoredData = true;\n        } else if (parsedSettings) {\n          const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid.`;\n\n          console.error(error);\n        } else {\n          const warning = `VWO-SDK - [WARNING]: ${getCurrentTime()} VWO settings is empty in Storage Service.`;\n\n          console.warn(warning);\n        }\n      } catch (err) {\n        const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid. ${err}`;\n\n        console.error(error);\n        isStoredData = false;\n      }\n    }\n\n    return {\n      isStoredData,\n      parsedSettings\n    };\n  },\n\n  send: function({ method, url, payload, userStorageService } = {}) {\n    if (!url || !method) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      const { isStoredData, parsedSettings } = FetchUtil._getStoredSettings(userStorageService);\n\n      if (isStoredData) {\n        resolve(parsedSettings);\n      } else {\n        const options = {\n          method\n        };\n\n        if (method === 'POST') {\n          options.body = payload;\n        }\n\n        return fetch(url, options)\n          .then(res => {\n            const jsonData = res.json();\n\n            if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.setSettings)) {\n              userStorageService.setSettings(jsonData);\n            }\n\n            console.log(res.status);\n            if (res.status === 200) {\n              resolve(jsonData);\n            } else {\n              let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${res.status}`;\n\n              console.error(error);\n              reject(error);\n            }\n          })\n          .catch(err => {\n            let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${err}`;\n\n            console.error(error);\n            reject(error);\n          });\n      }\n    });\n  }\n};\n\nmodule.exports = FetchUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('./FunctionUtil');\nconst { isObject, isFunction } = require('./DataTypeUtil');\n\nconst XhrUtil = {\n  _getStoredSettings: function(userStorageService) {\n    let isStoredData = false;\n    let parsedSettings;\n\n    if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.getSettings)) {\n      try {\n        const settings = userStorageService.getSettings();\n        parsedSettings = JSON.parse(settings);\n\n        if (parsedSettings && isObject(parsedSettings) && Object.keys(parsedSettings).length > 3) {\n          const info = `VWO-SDK - [INFO]: ${getCurrentTime()} VWO settings found in Storage Service.`;\n\n          console.info(info);\n\n          isStoredData = true;\n        } else if (parsedSettings) {\n          const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid.`;\n\n          console.error(error);\n        } else {\n          const warning = `VWO-SDK - [WARNING]: ${getCurrentTime()} VWO settings is empty in Storage Service.`;\n\n          console.warn(warning);\n        }\n      } catch (err) {\n        const error = `VWO-SDK - [ERROR]: ${getCurrentTime()} VWO settings found in Storage Service is not valid. ${err}`;\n\n        console.error(error);\n        isStoredData = false;\n      }\n    }\n\n    return {\n      isStoredData,\n      parsedSettings\n    };\n  },\n  send: function({ method, url, payload, userStorageService } = {}) {\n    if (!url || !method) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      const { isStoredData, parsedSettings } = XhrUtil._getStoredSettings(userStorageService);\n\n      if (isStoredData) {\n        resolve(parsedSettings);\n      } else {\n        let xhr = new XMLHttpRequest();\n        this.xhrHandler(xhr, method, url, payload, userStorageService, resolve, reject);\n      }\n    });\n  },\n\n  xhrHandler: function(xhr, method, url, payload, userStorageService, resolve, reject) {\n    if (method === 'GET') {\n      xhr.onload = () => {\n        this.xhrOnLoad(xhr, userStorageService, resolve);\n      };\n      xhr.onerror = () => {\n        this.xhrOnError(xhr, reject);\n      };\n\n      xhr.open(method, url);\n      xhr.send();\n    } else if (method === 'POST') {\n      xhr.onload = () => {\n        resolve();\n      };\n      xhr.onerror = () => {\n        reject('Something went wrong');\n      };\n\n      xhr.open(method, url, true);\n      xhr.send(JSON.stringify(payload));\n    }\n  },\n\n  xhrOnLoad: function(xhr, userStorageService, resolve) {\n    try {\n      let parsedXhrResponse = JSON.parse(xhr.response);\n\n      if (userStorageService && isObject(userStorageService) && isFunction(userStorageService.setSettings)) {\n        userStorageService.setSettings(xhr.response);\n      }\n\n      resolve(parsedXhrResponse);\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n  xhrOnError: function(xhr, reject) {\n    let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${\n      xhr.status\n    }`;\n\n    console.error(error);\n    reject(error);\n  }\n};\n\nmodule.exports = XhrUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst UrlEnum = require('../enums/UrlEnum');\nconst { getRandomNumber, getCurrentTime } = require('./FunctionUtil');\n\nlet SettingsFileUtil = {\n  get: (accountId, sdkKey, userStorageService, config = {}) => {\n    if (!accountId || !sdkKey) {\n      console.error('AccountId and sdkKey are required for fetching account settings. Aborting!');\n      return;\n    }\n\n    let protocol = 'https';\n    let port;\n    let hostname = UrlEnum.BASE_URL;\n    let path = UrlEnum.SETTINGS_URL;\n\n    if (config.isViaWebhook) {\n      path = UrlEnum.WEBHOOK_SETTINGS_URL;\n    }\n\n    path +=\n      `?a=${accountId}&` +\n      `i=${sdkKey}&` +\n      `r=${getRandomNumber()}&` +\n      `platform=${Constants.PLATFORM}&` +\n      `${Constants.SDK_QUERY_PARAM}=${Constants.SDK_NAME}&` +\n      `${Constants.SDK_VERSION_QUERY_PARAM}=${Constants.SDK_VERSION}`;\n\n    if (config.hostname && config.path) {\n      protocol = config.protocol;\n      port = config.port;\n      hostname = config.hostname || hostname;\n      path = config.path || path;\n    }\n\n    if (typeof process.env === 'undefined') {\n      if (typeof XMLHttpRequest === 'undefined') {\n        return require('./FetchUtil').send({\n          method: 'GET',\n          url: `${protocol}://${hostname}${path}`,\n          userStorageService\n        });\n      }\n      return require('./XhrUtil').send({\n        method: 'GET',\n        url: `${protocol}://${hostname}${path}`,\n        userStorageService\n      });\n    } else {\n      const http = require('http');\n      const https = require('https');\n\n      return new Promise((resolve, reject) => {\n        const options = {\n          hostname,\n          path,\n          agent: false\n        };\n\n        if (port) {\n          options.port = port;\n        }\n\n        (protocol === 'https' ? https : http).get(options, res => {\n          SettingsFileUtil.handleHttpRequest(res, resolve, reject);\n        });\n      });\n    }\n  },\n\n  handleHttpRequest: (res, resolve, reject) => {\n    const { statusCode } = res;\n    const contentType = res.headers['content-type'];\n\n    let error;\n    let rawData = '';\n\n    if (!/^application\\/json/.test(contentType)) {\n      error = `Invalid content-type.\\nExpected application/json but received ${contentType}`;\n    }\n\n    if (error) {\n      console.error(error.message);\n      // Consume response data to free up memory\n      res.resume();\n      reject(error);\n\n      return;\n    }\n\n    res.setEncoding('utf8');\n\n    res.on('data', chunk => {\n      rawData += chunk;\n    });\n\n    res.on('end', () => {\n      SettingsFileUtil.handleHttpResponse(statusCode, rawData, resolve, reject);\n    });\n  },\n\n  handleHttpResponse: (statusCode, rawData, resolve, reject) => {\n    try {\n      const parsedData = JSON.parse(rawData);\n\n      if (statusCode !== 200) {\n        let error = `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings. Got Status Code: ${statusCode} and message: ${rawData}`;\n        console.error(error);\n        reject(error);\n\n        return;\n      }\n      resolve(parsedData);\n    } catch (err) {\n      console.error(\n        `VWO-SDK - [ERROR]: ${getCurrentTime()} Request failed for fetching account settings - ${err.message}`\n      );\n      reject(err);\n    }\n  }\n};\n\nmodule.exports = SettingsFileUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VWO = require('./VWO');\n\nconst DataTypeUtil = require('./utils/DataTypeUtil');\nconst FunctionUtil = require('./utils/FunctionUtil');\nconst { objectValues } = require('./utils/ObjectUtil');\nconst SettingsFileUtil = require('./utils/SettingsFileUtil');\nconst GoalTypeEnum = require('./enums/GoalTypeEnum');\nconst { MAX_EVENTS_PER_REQUEST } = require('./constants');\n\nconst logging = require('./services/logging');\nconst ApiEnum = require('./enums/ApiEnum');\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst file = FileNameEnum.INDEX;\nconst { setLogHandler, setLogLevel, LogLevelEnum, LogNumberLevel, LogMessageEnum, LogMessageUtil } = logging;\n\nconst logger = logging.getLogger();\n\n// By default, all ERRORS should be logged\nlogging.setLogLevel(LogLevelEnum.ERROR);\n\nfunction logError(parameter = '', type = '') {\n  const log = LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CONFIG_PARAMETER_INVALID, {\n    file: file,\n    parameter,\n    type,\n    api: ApiEnum.LAUNCH\n  });\n\n  throw new Error(logger.log(LogLevelEnum.ERROR, log));\n}\n\nfunction logInfo(parameter = '', type = '') {\n  const log = LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_PARAMETER_USED, {\n    file: file,\n    parameter,\n    type\n  });\n\n  console.info(`VWO-SDK - [INFO]:   ${FunctionUtil.getCurrentTime()} ${log}`);\n}\n\nmodule.exports = {\n  logging,\n  setLogger: setLogHandler,\n  setLogLevel,\n  getSettingsFile: SettingsFileUtil.get,\n  GoalTypeEnum,\n  LogLevelEnum,\n  /**\n   * Initializes the SDK and parses the settingsfile\n   *\n   * @param {Object} config configuration for the SDK\n   */\n  launch: function(sdkConfig) {\n    let config = {};\n    try {\n      // validating config schema\n      FunctionUtil.cloneObject(sdkConfig);\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser) &&\n        !DataTypeUtil.isBoolean(sdkConfig.shouldTrackReturningUser)\n      ) {\n        logError('shouldTrackReturningUser', 'boolean');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.shouldTrackReturningUser)) {\n        logInfo('shouldTrackReturningUser', 'boolean');\n      }\n\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode) &&\n        !DataTypeUtil.isBoolean(sdkConfig.isDevelopmentMode)\n      ) {\n        logError('isDevelopmentMode', 'boolean');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.isDevelopmentMode)) {\n        logInfo('isDevelopmentMode', 'boolean');\n      }\n\n      if (sdkConfig.goalTypeToTrack && !objectValues(GoalTypeEnum).includes(sdkConfig.goalTypeToTrack)) {\n        logError('goalTypeToTrack', 'string(REVENUE_TRACKING, CUSTOM_GOAL, ALL)');\n      } else if (sdkConfig.goalTypeToTrack) {\n        logInfo('goalTypeToTrack', 'string(REVENUE_TRACKING, CUSTOM_GOAL, ALL)');\n      }\n\n      if (\n        sdkConfig.logging &&\n        sdkConfig.logging.level &&\n        !objectValues(LogLevelEnum).includes(sdkConfig.logging.level)\n      ) {\n        logError('logLevel', 'number(1,2,3,4)');\n      } else if (sdkConfig.logging && sdkConfig.logging.level) {\n        logInfo('logLevel', 'number(1,2,3,4)');\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isNumber(sdkConfig.pollingInterval)) {\n        logError('pollingInterval', 'number(in miliiseconds)');\n      } else if (sdkConfig.pollingInterval) {\n        logInfo('pollingInterval', 'number(in miliiseconds)');\n      }\n\n      if (sdkConfig.pollingInterval && DataTypeUtil.isUndefined(sdkConfig.sdkKey)) {\n        logError('sdkKey(required for polling)', 'string');\n      }\n\n      if (sdkConfig.pollingInterval && !DataTypeUtil.isString(sdkConfig.sdkKey)) {\n        logError('sdkKey', 'string');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents) && !DataTypeUtil.isObject(sdkConfig.batchEvents)) {\n        logError('batchEvents', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.batchEvents)) {\n        logInfo('batchEvents', 'object');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.returnPromiseFor) && !DataTypeUtil.isObject(sdkConfig.returnPromiseFor)) {\n        logError('returnPromiseFor', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.returnPromiseFor)) {\n        logInfo('returnPromiseFor', 'object');\n      }\n\n      if (!DataTypeUtil.isUndefined(sdkConfig.integrations) && !DataTypeUtil.isObject(sdkConfig.integrations)) {\n        logError('integrations', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.integrations)) {\n        logInfo('integrations', 'object');\n      }\n\n      if (\n        !DataTypeUtil.isUndefined(sdkConfig.userStorageService) &&\n        !DataTypeUtil.isObject(sdkConfig.userStorageService)\n      ) {\n        logError('userStorageService', 'object');\n      } else if (!DataTypeUtil.isUndefined(sdkConfig.userStorageService)) {\n        logInfo('userStorageService', 'object');\n      }\n\n      // For JavaScript SDK, batching is not required and is not available\n      if (DataTypeUtil.isObject(sdkConfig.batchEvents) && typeof process.env === 'undefined') {\n        sdkConfig.batchEvents = null;\n      }\n\n      // For Node.js SDK\n      if (typeof process.env !== 'undefined') {\n        if (\n          DataTypeUtil.isObject(sdkConfig.batchEvents) &&\n          (!(\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.eventsPerRequest) &&\n              sdkConfig.batchEvents.eventsPerRequest > 0 &&\n              sdkConfig.batchEvents.eventsPerRequest <= MAX_EVENTS_PER_REQUEST) ||\n            (DataTypeUtil.isNumber(sdkConfig.batchEvents.requestTimeInterval) &&\n              sdkConfig.batchEvents.requestTimeInterval >= 1)\n          ) ||\n            (sdkConfig.batchEvents.flushCallback && !DataTypeUtil.isFunction(sdkConfig.batchEvents.flushCallback)))\n        ) {\n          logError('batchEvents', 'object');\n        }\n      }\n\n      config = sdkConfig;\n    } catch (err) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.CONFIG_CORRUPTED, {\n          file: file,\n          api: ApiEnum.LAUNCH\n        })\n      );\n\n      config = {};\n    }\n\n    // If DEV mode, set colorful logs to true\n    if (config.isDevelopmentMode) {\n      logging.setLogColorMode(true);\n    }\n\n    // If logging is enabled, use the logger and logLevel defined by the client\n    if (config.logging && DataTypeUtil.isObject(config.logging)) {\n      if (config.logging.haveColoredLogs !== undefined) {\n        logging.setLogColorMode(config.logging.haveColoredLogs);\n      }\n\n      if (\n        config.logging.logger &&\n        DataTypeUtil.isObject(config.logging.logger) &&\n        DataTypeUtil.isFunction(config.logging.logger.log)\n      ) {\n        logging.setLogHandler(config.logging.logger);\n        logging.setLogLevel(logging.LogLevelEnum.NOTSET);\n\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_CUSTOM_LOGGER_USED, {\n            file: file\n          })\n        );\n      } else if (config.logging.logger) {\n        logError('logging.logger', 'object');\n      }\n\n      if (config.logging.level !== undefined) {\n        logging.setLogLevel(config.logging.level);\n        logger.log(\n          LogLevelEnum.DEBUG,\n          LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_LOG_LEVEL_SET, {\n            file: file,\n            level: LogNumberLevel['_' + config.logging.level]\n          })\n        );\n      }\n    }\n\n    // DEBUG log for knowing whether it's DEV mode\n    if (config.isDevelopmentMode) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_DEVELOPMENT_MODE_STATUS, {\n          file: file\n        })\n      );\n    }\n\n    // Set logger on config Obkect, to be required later\n    config.logger = (config.logging && config.logging.logger) || logger;\n\n    // Create an instance of VWO class which exposes API methods\n    return new VWO(config);\n  }\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst api = require('./api');\n\nconst FileNameEnum = require('./enums/FileNameEnum');\nconst ApiEnum = require('./enums/ApiEnum');\n\nconst DataTypeUtil = require('./utils/DataTypeUtil');\nconst FunctionUtil = require('./utils/FunctionUtil');\n\nconst EventQueue = require('./services/EventQueue');\nconst SettingsFileService = require('./services/SettingsFileManager');\nconst logging = require('./services/logging');\nconst HooksManager = require('./services/HooksManager');\nconst UrlService = require('./services/UrlService');\nconst UsageStats = require('./services/UsageStats');\n\nlet BatchEventsDispatcher;\nlet customEventUtil;\nlet BatchEventsQueue;\n\nif (typeof process.env !== 'undefined') {\n  BatchEventsQueue = require('./services/BatchEventsQueue');\n  BatchEventsDispatcher = require('./utils/BatchEventsDispatcher').dispatch;\n  customEventUtil = require('./utils/CustomEventUtil');\n}\n\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst file = FileNameEnum.VWO;\n\nclass VWO {\n  // Setting various services on the instance to be accessible by its member functions\n  constructor(config = {}) {\n    this.getVariation = this.getVariationName; // to be backward compatible\n    this.userStorageService = config.userStorageService;\n    this.logger = config.logger;\n    this.returnPromiseFor = config.returnPromiseFor;\n    this.optOut = false;\n\n    let settingsFileManager = new SettingsFileService(config);\n\n    // Validate the config file i.e. check if required fields contain appropriate data\n    if (!settingsFileManager.isSettingsFileValid()) {\n      this.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_INVALID, {\n          file\n        })\n      );\n\n      return;\n    }\n\n    this.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_VALID, {\n        file\n      })\n    );\n\n    // Initialize Hooks manager so that callbacks can be invoked\n    HooksManager.init(config);\n\n    // Setup event quque for sending impressions to VWO server\n    this.eventQueue = new EventQueue();\n    this.usageStats = new UsageStats();\n\n    this.SettingsFileManager = settingsFileManager;\n    settingsFileManager.checkAndPoll(); // Checks if pollingInterval is passed then starts polling settingsFile\n\n    if (!config.isDevelopmentMode) {\n      this.usageStats.collectUsageStats(settingsFileManager.getConfig());\n    }\n\n    // Only for Node.js SDK\n    if (typeof process.env !== 'undefined') {\n      if (config.batchEvents) {\n        const accountId = settingsFileManager.getSettingsFile().accountId;\n        const sdkKey = settingsFileManager.getSettingsFile().sdkKey;\n\n        this.batchEventsQueue = new BatchEventsQueue(\n          Object.assign(\n            {},\n            config.batchEvents,\n            { isDevelopmentMode: config.isDevelopmentMode },\n            {\n              accountId,\n              dispatcher: (events, callback) =>\n                BatchEventsDispatcher(\n                  {\n                    ev: events\n                  },\n                  callback,\n                  Object.assign(\n                    {},\n                    {\n                      a: accountId\n                    },\n                    this.usageStats.getUsageStats()\n                  ),\n                  sdkKey\n                )\n            }\n          )\n        );\n\n        this.batchEventsQueue.flushAndClearTimer.bind(this.batchEventsQueue);\n      }\n    }\n\n    // Process settingsFile for various things. For eg: assign bucket range to variation, etc.\n    this.SettingsFileManager.processSettingsFile();\n\n    this.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.SDK_INITIALIZED, {\n        file\n      })\n    );\n\n    this.UrlService = UrlService.init(config.settingsFile);\n  }\n\n  // PUBLIC METHODS\n\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  activate(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.activate || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.ACTIVATE\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.ACTIVATE\n              })\n            );\n            resolve(null);\n          } else {\n            let variationName;\n            options.responseCallback = (_error, _response) => {\n              resolve(variationName);\n            };\n            variationName = api.activate(self, campaignKey, userId, options);\n\n            // If we get null from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (!variationName) {\n              resolve(variationName);\n            } else if (DataTypeUtil.isObject(variationName)) {\n              resolve(variationName.variationName);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.ACTIVATE\n          })\n        );\n        return null;\n      }\n\n      const apiResponse = api.activate(self, campaignKey, userId, options);\n\n      if (DataTypeUtil.isObject(apiResponse)) {\n        return apiResponse.variationName;\n      }\n\n      return apiResponse;\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Gets the variation assigned for the user for the campaign\n   *\n   * @param {String} campaignKey       unique campaign key specified in VWO app\n   * @param {String} userId            ID assigned to a user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n   */\n  getVariationName(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      if (self.returnPromiseFor && (self.returnPromiseFor.getVariationName || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.GET_VARIATION_NAME\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.GET_VARIATION_NAME\n              })\n            );\n            resolve(null);\n          } else {\n            // since this API does not send any async call, we can simply resolve the returned value\n            resolve(api.getVariation(self, campaignKey, userId, options));\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.GET_VARIATION_NAME\n          })\n        );\n        return null;\n      }\n\n      return api.getVariation(self, campaignKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Marks the conversion of the campaign for a particular goal\n   *\n   * @param {String/Array<string>/null/undefined} campaignSpecifier campaign keys to track           unique campaignSpecifier\n   * @param {String} userId                ID assigned to a user\n   * @param {String} goalIdentifier         unique campaign's goal identifier\n   * @param {Object} options               optional params - customVariables, variationTargetingVariables, revenueValue\n   */\n  track(campaignSpecifier, userId, goalIdentifier, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.track || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.TRACK\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.TRACK\n              })\n            );\n            resolve(null);\n          } else {\n            let trackResponse;\n            let counter = 0;\n            options.responseCallback = (_error, _response) => {\n              counter += 1;\n              // In case of global goals, when all campaigns are tracked, then only resolve\n              if (counter === FunctionUtil.objectValues(trackResponse).filter(Boolean).length) {\n                resolve(trackResponse);\n              }\n            };\n            trackResponse = api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n            // If we get null/false from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            // Or, in case of global goals, if none campaign got success, manually resolve\n            if (!trackResponse || !FunctionUtil.objectValues(trackResponse).some(Boolean)) {\n              resolve(trackResponse);\n            } else if (trackResponse && trackResponse.isDevelopmentMode) {\n              delete trackResponse.isDevelopmentMode;\n              resolve(trackResponse);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.TRACK\n          })\n        );\n        return null;\n      }\n\n      return api.track(self, campaignSpecifier, userId, goalIdentifier, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method checks: Whether a feature is enabled or not for the given user\n   *\n   * @param {String} campaignKey       Unique key for a campaign\n   * @param {String} userId            Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {Boolean}                 true if feature enabled, false otherwise\n   */\n  isFeatureEnabled(campaignKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.isFeatureEnabled || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.IS_FEATURE_ENABLED\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.IS_FEATURE_ENABLED\n              })\n            );\n            resolve(false);\n          } else {\n            let isFeatureEnabledApiResponse;\n            options.responseCallback = (_error, _response) => {\n              resolve(!!isFeatureEnabledApiResponse);\n            };\n            isFeatureEnabledApiResponse = api.isFeatureEnabled(self, campaignKey, userId, options);\n            // If we get null from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (DataTypeUtil.isNull(isFeatureEnabledApiResponse)) {\n              resolve(false);\n            } else if (DataTypeUtil.isObject(isFeatureEnabledApiResponse)) {\n              resolve(!!isFeatureEnabledApiResponse.isFeatureEnabled);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.IS_FEATURE_ENABLED\n          })\n        );\n        return false;\n      }\n\n      const apiResponse = api.isFeatureEnabled(self, campaignKey, userId, options);\n\n      if (DataTypeUtil.isObject(apiResponse)) {\n        return !!apiResponse.isFeatureEnabled;\n      }\n\n      return !!apiResponse;\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n\n  /**\n   * This API method: Return the variable for that variation(if Feature Test),\n   *    otherwise the default values being set in Feature\n   *\n   * @param {String} campaignKey   Unique key for a campaign\n   * @param {String} variableKey   Unique key for a feature's variable\n   * @param {String} userId        Unique identifier for the user\n   * @param {Object} options           optional params - customVariables, variationTargetingVariables\n   *\n   * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n   *                                             maintaining the data-type,\n   *                                             null if anything fails like campaign / variable not found\n   */\n  getFeatureVariableValue(campaignKey, variableKey, userId, options = {}) {\n    try {\n      let self = this;\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      if (self.returnPromiseFor && (self.returnPromiseFor.getFeatureVariableValue || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n              })\n            );\n            resolve(null);\n          } else {\n            // since this API does not send any async call, we can simply resolve the returned value\n            resolve(api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options));\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.GET_FEATURE_VARIABLE_VALUE\n          })\n        );\n        return null;\n      }\n\n      return api.getFeatureVariableValue(self, campaignKey, variableKey, userId, options);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return null;\n    }\n  }\n\n  /**\n   * This API method: Pushes the key-value tag pair for a particular user\n   *\n   * @param {String} tagKey                    tag key\n   * @param {String} tagValue                  tag Value\n   * @param {String} userId                    ID assigned to a user\n   *\n   * @return {Boolean}                    true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n   */\n  push(tagKey, tagValue, userId) {\n    try {\n      let self = this;\n      let customDimensionMap;\n\n      if (arguments.length === 2) {\n        // Argument reshuffling.\n        customDimensionMap = tagKey;\n        userId = tagValue;\n\n        tagKey = ' ';\n        tagValue = ' ';\n      } else if (arguments.length === 3) {\n        customDimensionMap = {};\n      } else {\n        this.logger.log(\n          LogLevelEnum.ERROR,\n          LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n            file,\n            api: ApiEnum.PUSH\n          })\n        );\n        return false;\n      }\n\n      // Check if returnPromiseFor is provided. If yes, return a promise instead of value\n      // i.e. wait till the network call is not successful\n      if (self.returnPromiseFor && (self.returnPromiseFor.push || self.returnPromiseFor.all)) {\n        self.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CONFIG_RETURN_PROMISE, {\n            file,\n            method: ApiEnum.PUSH\n          })\n        );\n        return new Promise(resolve => {\n          if (this.optOut) {\n            this.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n                file,\n                api: ApiEnum.PUSH\n              })\n            );\n            resolve(null);\n          } else {\n            let apiResponse;\n            let counter = 0;\n\n            const options = {\n              responseCallback: (_error, _response) => {\n                counter += 1;\n                // In case of multiple custom dimensions, when all are tracked, then only resolve\n                if (counter === FunctionUtil.objectValues(apiResponse).filter(Boolean).length) {\n                  resolve(apiResponse);\n                }\n              }\n            };\n            apiResponse = api.push(self, tagKey, tagValue, userId, customDimensionMap, options);\n            // If we get false from the API i.e. no tracking call was sent\n            // In this case, respponseCallback will not be fired and hence we have to manually resolve the promise\n            if (!apiResponse) {\n              resolve(false);\n            } else if (apiResponse && apiResponse.isDevelopmentMode) {\n              delete apiResponse.isDevelopmentMode;\n              resolve(apiResponse);\n            }\n          }\n        });\n      }\n\n      if (this.optOut) {\n        this.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n            file,\n            api: ApiEnum.PUSH\n          })\n        );\n        return null;\n      }\n\n      return api.push(self, tagKey, tagValue, userId, customDimensionMap);\n    } catch (err) {\n      this.logger.log(LogLevelEnum.ERROR, err.message);\n      return false;\n    }\n  }\n\n  setOptOut() {\n    this.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.OPT_OUT_API_CALLED, {\n        file\n      })\n    );\n\n    if (this.returnPromiseFor && (this.returnPromiseFor.optOut || this.returnPromiseFor.all)) {\n      return new Promise(resolve => {\n        this._destroyInstanceVariables();\n        if (this.batchEventsQueue) {\n          this.flushEvents().then(() => {\n            this.batchEventsQueue = undefined;\n            resolve(true);\n          });\n        } else {\n          resolve(true);\n        }\n      });\n    }\n\n    if (this.batchEventsQueue) {\n      this.flushEvents().then(() => {\n        this.batchEventsQueue = undefined;\n      });\n    }\n\n    this._destroyInstanceVariables();\n\n    return true;\n  }\n  /**\n   * Manually flush impression events to VWO which are queued in batch queue as per batchEvents config\n   */\n  flushEvents() {\n    const accountId = this.SettingsFileManager.getSettingsFile().accountId;\n\n    if (typeof process.env !== 'undefined') {\n      this.logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.EVENT_BATCH_FLUSH, {\n          file,\n          accountId\n        })\n      );\n\n      return new Promise((resolve, _reject) => {\n        if (this.optOut) {\n          this.logger.log(\n            LogLevelEnum.INFO,\n            LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n              file,\n              api: 'flushEvents'\n            })\n          );\n          resolve({\n            status: false,\n            message: 'opted out'\n          });\n        } else {\n          if (this.batchEventsQueue) {\n            customEventUtil.getInstance().once('batchCallCompleteion', (status, message) => {\n              if (status) {\n                resolve({\n                  status: true,\n                  message: message || 'Batch call sent to VWO'\n                });\n              } else {\n                resolve({\n                  status: false,\n                  message: message || 'Batch call could not be processed'\n                });\n              }\n            });\n\n            this.batchEventsQueue.flushAndClearTimer();\n\n            return;\n          }\n\n          this.logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.NO_BATCH_QUEUE, {\n              file,\n              accountId\n            })\n          );\n\n          resolve({\n            status: false,\n            message: 'No batchEvents config present in launch API'\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId, sdkKey) {\n    if (this.optOut) {\n      this.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.API_NOT_ENABLED, {\n          file,\n          api: 'getAndUpdateSettingsFile'\n        })\n      );\n      return new Promise(resolve => {\n        resolve(null);\n      });\n    }\n    return this.SettingsFileManager.getAndUpdateSettingsFile(accountId, sdkKey);\n  }\n\n  _destroyInstanceVariables() {\n    this.userStorageService = undefined;\n    this.SettingsFileManager = undefined;\n    this.usageStats = undefined;\n    this.eventQueue = undefined;\n    this.optOut = true;\n  }\n}\n\nmodule.exports = VWO;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst activate = require('./activate');\nconst getVariation = require('./getVariation');\nconst track = require('./track');\nconst isFeatureEnabled = require('./isFeatureEnabled');\nconst getFeatureVariableValue = require('./getFeatureVariableValue');\nconst push = require('./push');\n\nmodule.exports = {\n  activate,\n  getVariation,\n  track,\n  isFeatureEnabled,\n  getFeatureVariableValue,\n  push\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Activate;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign and send the metrics to VWO server\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n * 4. Sends an impression call to VWO server to track user\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction activate(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.ACTIVATE;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.ACTIVATE,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n        file,\n        api: ApiEnum.ACTIVATE\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.WARN,\n      LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (!CampaignUtil.isAbCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  // Once the matching RUNNING campaign is found, assign the deterministic variation to the userId provided\n  const { variationId, variationName, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  // Check if variation-name has been assigned to the userId. If not, return no variation\n  if (!ValidateUtil.isValidValue(variationName)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.DECISION_NO_VARIATION_ALLOTED, {\n        file,\n        userId,\n        campaignKey\n      })\n    );\n\n    return null;\n  }\n\n  // check if variation found from storage. return it without sending a call to VWO server\n  if (isStoredVariation && !shouldTrackReturningUser) {\n    vwoInstance.logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_USER_ALREADY_TRACKED, {\n        file,\n        userId,\n        campaignKey,\n        api\n      })\n    );\n    return { variationName };\n  }\n\n  // Variation found...let VWO server knows about it to show report stats\n  if (config.batchEvents) {\n    let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n    vwoInstance.batchEventsQueue.enqueue(properties);\n  } else if (settingsFile.isEventArchEnabled) {\n    let properties = ImpressionUtil.getEventsBaseProperties(\n      settingsFile,\n      EventEnum.VWO_VARIATION_SHOWN,\n      vwoInstance.usageStats.getUsageStats()\n    );\n    let payload = ImpressionUtil.getTrackUserPayloadData(\n      settingsFile,\n      userId,\n      EventEnum.VWO_VARIATION_SHOWN,\n      campaign.id,\n      variationId\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n  } else {\n    let properties = ImpressionUtil.buildEventForTrackingUser(\n      settingsFile,\n      campaign.id,\n      variationId,\n      userId,\n      vwoInstance.usageStats.getUsageStats()\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n  }\n\n  if (config.isDevelopmentMode) {\n    return { variationName };\n  }\n\n  return variationName;\n}\n\nmodule.exports = activate;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ValidateUtil = require('../utils/ValidateUtil');\n\nconst Bucketer = require('./BucketingService');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.VariationDecider;\n\nconst VariationDecider = {\n  /**\n   * Returns the Variation Allotted to User\n   *\n   * @param {String} userId the unique ID assigned to User\n   * @param {Object} campaign\n   *\n   * @return {Object} Variation object allotted to User\n   */\n  getVariationAllotted: (userId, campaign) => {\n    let response = {\n      variation: null,\n      variationId: null,\n      variationName: null\n    };\n\n    if (!ValidateUtil.isValidValue(userId)) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.USER_ID_INVALID, {\n          file,\n          userId\n        })\n      );\n\n      return response;\n    }\n\n    if (Bucketer.isUserPartOfCampaign(userId, campaign)) {\n      let variation = VariationDecider.getVariationOfCampaignForUser(userId, campaign) || {};\n\n      response.variation = variation;\n      response.variationId = variation.id;\n      response.variationName = variation.name;\n    } else {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_NOT_PART_OF_CAMPAIGN, {\n          file,\n          userId,\n          campaignKey: campaign.key\n        })\n      );\n    }\n\n    return response;\n  },\n\n  /**\n   * Assigns random variation ID to a particular user depending on the PercentTraffic.\n   * Makes user a part of campaign if user's included in Traffic.\n   *\n   * @param {String} userId the unique ID assigned to a user\n   * @param {Object} campaign the Campaign of which user is to be made a part of\n   *\n   * @return {Object|null} Variation allotted to User\n   */\n  getVariationOfCampaignForUser: (userId, campaign) => {\n    if (!campaign) {\n      return null;\n    }\n\n    let variation = Bucketer.bucketUserToVariation(userId, campaign);\n\n    if (variation && variation.name) {\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_STATUS, {\n          file,\n          userId,\n          campaignKey: campaign.key,\n          status: `got Varation:${variation.name}`\n        })\n      );\n      return {\n        variation,\n        name: variation.name,\n        id: variation.id\n      };\n    }\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.USER_VARIATION_STATUS, {\n        file,\n        userId,\n        campaignKey: campaign.key,\n        status: 'got no variation'\n      })\n    );\n\n    return null;\n  }\n};\n\nmodule.exports = VariationDecider;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeEnum = {\n  NUMBER: 'number',\n  STRING: 'string',\n  // FUNCTION: 'function',\n  BOOLEAN: 'boolean',\n  OBJECT: 'object'\n};\n\nmodule.exports = DataTypeEnum;\n","(function(){\n  var _global = this;\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    var\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str.charCodeAt(i) & 0xff)) |\n        ((str.charCodeAt(++i) & 0xff) << 8) |\n        ((str.charCodeAt(++i) & 0xff) << 16) |\n        ((str.charCodeAt(++i) & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: h ^= (str.charCodeAt(i) & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /**\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n          ((key.charCodeAt(++i) & 0xff) << 8) |\n          ((key.charCodeAt(++i) & 0xff) << 16) |\n          ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  var murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (typeof(module) != 'undefined') {\n    module.exports = murmur;\n  } else {\n    var _previousRoot = _global.murmur;\n    murmur.noConflict = function() {\n      _global.murmur = _previousRoot;\n      return murmur;\n    }\n    _global.murmur = murmur;\n  }\n}());\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Took reference from: \"loglevel\" - https://github.com/pimterry/loglevel\n *\n * Name: loglevel\n * Published Name: loglevel\n * URL: https://github.com/pimterry/loglevel\n * Description: Minimal lightweight logging for JavaScript, adding reliable log level methods to wrap any available console.log methods\n * Author: Tim Perry (https://github.com/pimterry)\n * LICENSE: MIT License\n * Local Modifications: This library is not used as a dependency. Source code was referenced and is modified as per requirements.\n *\n */\n\n// TODO: change path\nconst LogMessageEnum = {\n  DEBUG_MESSAGES: require('vwo-sdk-log-messages/src/debug-messages.json'),\n  INFO_MESSAGES: require('vwo-sdk-log-messages/src/info-messages.json'),\n  WARNING_MESSAGES: require('vwo-sdk-log-messages/src/warning-messages.json'),\n  ERROR_MESSAGES: require('vwo-sdk-log-messages/src/error-messages.json')\n};\n\nconst { LogLevelEnum, LogNumberLevel } = require('../../enums/LogLevelEnum');\nconst LogMessageUtil = require('../../utils/LogMessageUtil');\n\nconst ConsoleLogManager = require('./ConsoleLogManager');\n\nlet globalLogLevel = LogLevelEnum.NOTSET;\nlet isColoredLogEnabled = false;\nlet globalLogHandler = new ConsoleLogManager();\n\nclass LogManager {\n  constructor(name) {\n    this.name = name;\n    this.isColoredLogEnabled = isColoredLogEnabled;\n  }\n\n  _customLog(level, message) {\n    if (level < globalLogLevel) {\n      return;\n    }\n\n    globalLogHandler.log(level, message);\n  }\n\n  log(level, message, disableLogs = false) {\n    if (disableLogs) {\n      return;\n    }\n    try {\n      this._customLog(level, message);\n    } catch (err) {\n      console.error('VWO: Could not log.', err);\n    }\n  }\n\n  info(message) {\n    this._customLog(LogLevelEnum.INFO, message);\n  }\n  debug(message) {\n    this._customLog(LogLevelEnum.DEBUG, message);\n  }\n  warn(message) {\n    this._customLog(LogLevelEnum.WARN, message);\n  }\n  error(message) {\n    this._customLog(LogLevelEnum.ERROR, message);\n  }\n}\n\nfunction getLogger(name) {\n  return new LogManager(name);\n}\n\nfunction setLogHandler(logger) {\n  globalLogHandler = logger;\n}\n\nfunction setLogLevel(level) {\n  if (level === undefined) {\n    globalLogLevel = LogLevelEnum.ERROR;\n  } else {\n    globalLogLevel = level;\n  }\n}\n\nfunction getLogLevel() {\n  return globalLogLevel;\n}\n\nfunction setLogColorMode(value) {\n  isColoredLogEnabled = value;\n  globalLogHandler.isColoredLogEnabled = isColoredLogEnabled;\n}\n\nfunction getLogColorMode() {\n  return isColoredLogEnabled;\n}\n\nmodule.exports = {\n  LogLevelEnum,\n  LogNumberLevel,\n  LogMessageUtil,\n  LogMessageEnum,\n  getLogger,\n  setLogHandler,\n  setLogLevel,\n  getLogLevel,\n  LogManager,\n  setLogColorMode,\n  getLogColorMode,\n  globalLogHandler\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst AnsiColorEnum = {\n  BOLD: '\\x1b[1m',\n  CYAN: '\\x1b[36m',\n  GREEN: '\\x1b[32m',\n  LIGHTBLUE: '\\x1b[94m',\n  RED: '\\x1b[31m',\n  RESET: '\\x1b[0m',\n  WHITE: '\\x1b[30m',\n  YELLOW: '\\x1b[33m'\n};\n\nmodule.exports = AnsiColorEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('./DataTypeUtil');\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\nlet LogMessageUtil = {\n  /**\n   * Took reference from: string-template\n   *\n   * Name: string-template\n   * Published Name: string-template\n   * URL: https://github.com/Matt-Esch/string-template\n   * Description: A lightweight string replace engine for text-based templates\n   * Author: Matt-Esch (https://github.com/Matt-Esch)\n   * License: MIT License\n   * Local Modifications: This library is not used as a dependency.\n   *       Source code was referenced and is modified as per requirements.\n   */\n  build: (template, data) => {\n    try {\n      return template.replace(nargs, (match, key, index) => {\n        let result;\n        let isKey;\n\n        if (template[index - 1] === '{' && template[index + match.length] === '}') {\n          return key;\n        } else {\n          isKey = data.hasOwnProperty(key);\n\n          if (isKey) {\n            let value = data[key];\n\n            if (DataTypeUtil.isFunction(value)) {\n              value = data[key]();\n            }\n            result = value;\n          } else {\n            result = null;\n          }\n          if (result === null || result === undefined) {\n            return '';\n          }\n\n          return result;\n        }\n      });\n    } catch (err) {\n      return template;\n    }\n  }\n};\n\nmodule.exports = LogMessageUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { getCurrentTime } = require('../../utils/FunctionUtil');\nconst { LogLevelEnum, LogLevelInfoEnum, LogLevelColorInfoEnum } = require('../../enums/LogLevelEnum');\n\nclass ConsoleLogManager {\n  constructor() {\n    this.logLevel = LogLevelEnum.NOTSET;\n    this.prefix = `VWO-SDK`;\n    this.isColoredLogEnabled = false;\n  }\n\n  log(level, message) {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    let logMessage;\n    if (this.isColoredLogEnabled) {\n      logMessage = `${this.prefix} - ${LogLevelColorInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    } else {\n      logMessage = `${this.prefix} - ${LogLevelInfoEnum[level]} ${getCurrentTime()} ${message}`;\n    }\n\n    this.consoleLog(level, [logMessage]);\n  }\n\n  shouldLog(targetLogLevel) {\n    return targetLogLevel >= this.logLevel;\n  }\n\n  setLogLevel(level) {\n    if (level === undefined) {\n      this.logLevel = LogLevelEnum.ERROR;\n    } else {\n      this.logLevel = level;\n    }\n  }\n\n  consoleLog(level, logArguments) {\n    switch (level) {\n      case LogLevelEnum.INFO:\n        console.info.apply(console, logArguments);\n        break;\n      case LogLevelEnum.WARN:\n        console.warn.apply(console, logArguments);\n        break;\n      case LogLevelEnum.ERROR:\n        console.error.apply(console, logArguments);\n        break;\n      default:\n        console.log.apply(console, logArguments);\n        break;\n    }\n  }\n}\n\nmodule.exports = ConsoleLogManager;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  PASSED: 'passed',\n  FAILED: 'failed'\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SegmentEnum = require('../enums/segment');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst { operandCustomVariablesParser, operandUserParser } = require('../utils/SegmentUtil');\nconst logging = require('../services/logging');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst FileNameEnum = require('../enums/FileNameEnum');\n\nconst { AND, OR, NOT } = SegmentEnum.SegmentOperatorTypes;\nconst { CUSTOM_VARIABLE, USER } = SegmentEnum.SegmentOperandTypes;\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst file = FileNameEnum.SegmentEvaluator;\n\nconst logger = logging.getLogger();\n\nmodule.exports = SegmentEvaluator;\n/**\n * This method: A parser which recursively evaluates the expression tree represented by dsl\n *\n * @param {Object} dsl                     The segments defined in the campaing\n * @param {Object} customVariables         Key/value pair of custom_attributs properties\n *\n * @return {Boolean}                       true if user is to be made part of campaign, else false\n */\nfunction evaluator(dsl, customVariables) {\n  let { key, value } = getKeyValue(dsl);\n  let operator = key;\n  let subDsl = value;\n  if (operator === NOT) {\n    return !evaluator(subDsl, customVariables);\n  } else if (operator === AND) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.every(val => val);\n  } else if (operator === OR) {\n    let list = [];\n    for (let i = 0; i < subDsl.length; i++) {\n      list.push(evaluator(subDsl[i], customVariables));\n    }\n\n    return list.some(val => val);\n  } else if (operator === CUSTOM_VARIABLE) {\n    return operandCustomVariablesParser(subDsl, customVariables);\n  } else if (operator === USER) {\n    return operandUserParser(subDsl, customVariables);\n  }\n}\n\nfunction SegmentEvaluator(dsl, customVariables = {}, campaignKey, userId, variation = '', disableLogs = false) {\n  try {\n    if (DataTypeUtil.isObject(dsl) && !Object.keys(dsl).length) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SEGMENTATION_SKIPPED, {\n          campaignKey,\n          userId,\n          file\n        }),\n        disableLogs\n      );\n      return true;\n    }\n    if (DataTypeUtil.isObject(dsl) && Object.keys(dsl).length) {\n      return evaluator(dsl, customVariables);\n    }\n    return true;\n  } catch (err) {\n    logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SEGMENTATION_ERROR, {\n        campaignKey,\n        userId,\n        customVariables: JSON.stringify(customVariables),\n        file,\n        err,\n        variation\n      }),\n      disableLogs\n    );\n    return false;\n  }\n}\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  CUSTOM_VARIABLE: 'custom_variable',\n  USER: 'user'\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  AND: 'and',\n  NOT: 'not',\n  OR: 'or'\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER: /^lower/,\n  LOWER_MATCH: /^lower\\((.*)\\)/,\n  WILDCARD: /^wildcard/,\n  WILDCARD_MATCH: /^wildcard\\((.*)\\)/,\n  REGEX: /^regex/,\n  REGEX_MATCH: /^regex\\((.*)\\)/,\n  STARTING_STAR: /^\\*/,\n  ENDING_STAR: /\\*$/,\n  GREATER_THAN_MATCH: /^gt\\(((\\d+\\.?\\d*)|(\\.\\d+))\\)/,\n  GREATER_THAN_EQUAL_TO_MATCH: /^gte\\(((\\d+\\.?\\d*)|(\\.\\d+))\\)/,\n  LESS_THAN_MATCH: /^lt\\(((\\d+\\.?\\d*)|(\\.\\d+))\\)/,\n  LESS_THAN_EQUAL_TO_MATCH: /^lte\\(((\\d+\\.?\\d*)|(\\.\\d+))\\)/\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  LOWER_VALUE: 1,\n  STARTING_ENDING_STAR_VALUE: 2,\n  STARTING_STAR_VALUE: 3,\n  ENDING_STAR_VALUE: 4,\n  REGEX_VALUE: 5,\n  EQUAL_VALUE: 6,\n  GREATER_THAN_VALUE: 7,\n  GREATER_THAN_EQUAL_TO_VALUE: 8,\n  LESS_THAN_VALUE: 9,\n  LESS_THAN_EQUAL_TO_VALUE: 10\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst { matchWithRegex } = require('../utils/FunctionUtil');\nconst { getKeyValue } = require('../utils/ObjectUtil');\nconst SegmentEnum = require('../enums/segment');\n\nconst {\n  LOWER_MATCH,\n  WILDCARD_MATCH,\n  REGEX_MATCH,\n  STARTING_STAR,\n  ENDING_STAR,\n  GREATER_THAN_MATCH,\n  GREATER_THAN_EQUAL_TO_MATCH,\n  LESS_THAN_MATCH,\n  LESS_THAN_EQUAL_TO_MATCH\n} = SegmentEnum.SegmentOperandValueTypeRegexes;\n\nconst {\n  LOWER_VALUE,\n  STARTING_ENDING_STAR_VALUE,\n  STARTING_STAR_VALUE,\n  ENDING_STAR_VALUE,\n  REGEX_VALUE,\n  EQUAL_VALUE,\n  GREATER_THAN_VALUE,\n  GREATER_THAN_EQUAL_TO_VALUE,\n  LESS_THAN_VALUE,\n  LESS_THAN_EQUAL_TO_VALUE\n} = SegmentEnum.SegmentOperandValues;\n\nfunction extractOperandValue(operand, regex) {\n  return matchWithRegex(operand, regex) && matchWithRegex(operand, regex)[1];\n}\n\nfunction processValues(operandValue, tagValue) {\n  // this is atomic, either both will be processed or none\n  let processedOperandValue = parseFloat(operandValue, 10);\n  let processedTagValue = parseFloat(tagValue, 10);\n  if (!processedOperandValue || !processedTagValue) {\n    return {\n      operandValue: operandValue,\n      tagValue: tagValue\n    };\n  }\n  // now we have surity that both are numbers\n  // now we can convert them independently to int type if they\n  // are int rather than floats\n  if (processedOperandValue === Math.floor(processedOperandValue)) {\n    processedOperandValue = parseInt(processedOperandValue, 10);\n  }\n  if (processedTagValue === Math.floor(processedTagValue)) {\n    processedTagValue = parseInt(processedTagValue, 10);\n  }\n  // convert it back to string and return\n  return {\n    operandValue: processedOperandValue.toString(),\n    tagValue: processedTagValue.toString()\n  };\n}\n\nfunction preProcessTagValue(tagValue) {\n  if (tagValue === undefined) {\n    tagValue = '';\n  }\n  if (DataTypeUtil.isBoolean(tagValue)) {\n    if (tagValue) {\n      tagValue = true;\n    } else {\n      tagValue = false;\n    }\n  }\n  if (tagValue !== null) {\n    tagValue = tagValue.toString();\n  }\n  return tagValue;\n}\n\nfunction preProcessOperandValue(operand) {\n  let operandType;\n  let operandValue;\n  let startingStar;\n  let endingStar;\n  // Pre process operand value\n  if (matchWithRegex(operand, LOWER_MATCH)) {\n    operandType = LOWER_VALUE;\n    operandValue = extractOperandValue(operand, LOWER_MATCH);\n  } else if (matchWithRegex(operand, WILDCARD_MATCH)) {\n    operandValue = extractOperandValue(operand, WILDCARD_MATCH);\n    startingStar = matchWithRegex(operandValue, STARTING_STAR);\n    endingStar = matchWithRegex(operandValue, ENDING_STAR);\n    // In case of wildcard, the operand type is further divided into contains, startswith and endswith\n    if (startingStar && endingStar) {\n      operandType = STARTING_ENDING_STAR_VALUE;\n    } else if (startingStar) {\n      operandType = STARTING_STAR_VALUE;\n    } else if (endingStar) {\n      operandType = ENDING_STAR_VALUE;\n    }\n    operandValue = operandValue.replace(STARTING_STAR, '').replace(ENDING_STAR, '');\n  } else if (matchWithRegex(operand, REGEX_MATCH)) {\n    operandType = REGEX_VALUE;\n    operandValue = extractOperandValue(operand, REGEX_MATCH);\n  } else if (matchWithRegex(operand, GREATER_THAN_MATCH)) {\n    operandType = GREATER_THAN_VALUE;\n    operandValue = extractOperandValue(operand, GREATER_THAN_MATCH);\n  } else if (matchWithRegex(operand, GREATER_THAN_EQUAL_TO_MATCH)) {\n    operandType = GREATER_THAN_EQUAL_TO_VALUE;\n    operandValue = extractOperandValue(operand, GREATER_THAN_EQUAL_TO_MATCH);\n  } else if (matchWithRegex(operand, LESS_THAN_MATCH)) {\n    operandType = LESS_THAN_VALUE;\n    operandValue = extractOperandValue(operand, LESS_THAN_MATCH);\n  } else if (matchWithRegex(operand, LESS_THAN_EQUAL_TO_MATCH)) {\n    operandType = LESS_THAN_EQUAL_TO_VALUE;\n    operandValue = extractOperandValue(operand, LESS_THAN_EQUAL_TO_MATCH);\n  } else {\n    operandType = EQUAL_VALUE;\n    operandValue = operand;\n  }\n  return {\n    operandType,\n    operandValue\n  };\n}\n\nfunction operandCustomVariablesParser(operand, customVariables) {\n  // Extract custom_variable_key and custom_variable_value from operand\n  let { key, value } = getKeyValue(operand);\n  let operandKey = key;\n  operand = value;\n  if (!customVariables.hasOwnProperty(key)) {\n    // For handling \".*\" regex case when key is not present in customVariables and matches regex is used.\n    return false;\n  }\n  let tagValue = customVariables[operandKey];\n  // Pre process tag value\n  tagValue = preProcessTagValue(tagValue);\n  let { operandType, operandValue } = preProcessOperandValue(operand);\n  // Process both operand and tag values\n  let processedValues = processValues(operandValue, tagValue);\n  tagValue = processedValues.tagValue;\n  return extractResult(operandType, processedValues.operandValue, tagValue);\n}\n\nfunction operandUserParser(operand, customVariables) {\n  const users = operand.split(',');\n  for (let i = 0; i < users.length; i++) {\n    if (users[i].trim() === customVariables._vwoUserId) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction extractResult(operandType, operandValue, tagValue) {\n  let result;\n\n  switch (operandType) {\n    case LOWER_VALUE:\n      if (tagValue !== null) {\n        result = operandValue.toLowerCase() === tagValue.toLowerCase();\n      }\n      break;\n    case STARTING_ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.indexOf(operandValue) > -1;\n      }\n      break;\n    case STARTING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.endsWith(operandValue);\n      }\n      break;\n    case ENDING_STAR_VALUE:\n      if (tagValue !== null) {\n        result = tagValue.startsWith(operandValue);\n      }\n      break;\n    case REGEX_VALUE:\n      try {\n        let pattern = new RegExp(operandValue, 'g');\n        result = !!pattern.test(tagValue);\n      } catch (err) {\n        result = false;\n      }\n      break;\n    case GREATER_THAN_VALUE:\n      if (tagValue !== null) {\n        try {\n          result = parseFloat(operandValue) < parseFloat(tagValue);\n        } catch (err) {\n          result = false;\n        }\n      }\n      break;\n    case GREATER_THAN_EQUAL_TO_VALUE:\n      if (tagValue !== null) {\n        try {\n          result = parseFloat(operandValue) <= parseFloat(tagValue);\n        } catch (err) {\n          result = false;\n        }\n      }\n      break;\n    case LESS_THAN_VALUE:\n      if (tagValue !== null) {\n        try {\n          result = parseFloat(operandValue) > parseFloat(tagValue);\n        } catch (err) {\n          result = false;\n        }\n      }\n      break;\n    case LESS_THAN_EQUAL_TO_VALUE:\n      if (tagValue !== null) {\n        try {\n          result = parseFloat(operandValue) >= parseFloat(tagValue);\n        } catch (err) {\n          result = false;\n        }\n      }\n      break;\n    default:\n      result = tagValue === operandValue;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  extractOperandValue,\n  processValues,\n  preProcessTagValue,\n  preProcessOperandValue,\n  operandCustomVariablesParser,\n  operandUserParser\n};\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst HooksEnum = {\n  DECISION_TYPES: {\n    CAMPAIGN_DECISION: 'CAMPAIGN_DECISION'\n  }\n};\n\nmodule.exports = HooksEnum;\n","var v35 = require('./lib/v35.js');\nvar sha1 = require('./lib/sha1');\nmodule.exports = v35('v5', 0x50, sha1);\n","var bytesToUuid = require('./bytesToUuid');\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\n'use strict';\n\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0: return (x & y) ^ (~x & z);\n    case 1: return x ^ y ^ z;\n    case 2: return (x & y) ^ (x & z) ^ (y & z);\n    case 3: return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return (x << n) | (x>>> (32 - n));\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof(bytes) == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n    bytes = new Array(msg.length);\n    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);\n  }\n\n  bytes.push(0x80);\n\n  var l = bytes.length/4 + 2;\n  var N = Math.ceil(l/16);\n  var M = new Array(N);\n\n  for (var i=0; i<N; i++) {\n    M[i] = new Array(16);\n    for (var j=0; j<16; j++) {\n      M[i][j] =\n        bytes[i * 64 + j * 4] << 24 |\n        bytes[i * 64 + j * 4 + 1] << 16 |\n        bytes[i * 64 + j * 4 + 2] << 8 |\n        bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = ((bytes.length - 1) * 8) /\n    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n\n  for (var i=0; i<N; i++) {\n    var W = new Array(80);\n\n    for (var t=0; t<16; t++) W[t] = M[i][t];\n    for (var t=16; t<80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t=0; t<80; t++) {\n      var s = Math.floor(t/20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = (H[0] + a) >>> 0;\n    H[1] = (H[1] + b) >>> 0;\n    H[2] = (H[2] + c) >>> 0;\n    H[3] = (H[3] + d) >>> 0;\n    H[4] = (H[4] + e) >>> 0;\n  }\n\n  return [\n    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,\n    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,\n    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,\n    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,\n    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff\n  ];\n}\n\nmodule.exports = sha1;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetVariation;\n\n/**\n * This API method: Gets the variation assigned for the user for the campaign\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Assigns the determinitic variation to the user(based on userId), if user becomes part of campaign\n *    If userStorageService is used, it will look into it for the variation and if found, no further processing is done\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       unique campaign key specified in VWO app\n * @param {String} userId            ID assigned to a user\n * @param {Object} options           Optional params\n *\n * @return {String|null}             If variation is assigned then variation-name otherwise null in case of user not becoming part\n */\nfunction getVariation(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.GET_VARIATION_NAME;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.GET_VARIATION_NAME,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        metaData\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n        file,\n        api: ApiEnum.GET_VARIATION_NAME\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n\n  // If no settings are found, simply return no variation\n  if (!settingsFile) {\n    return null;\n  }\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.WARN,\n      LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  const { variationName } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    undefined,\n    api\n  );\n  if (!variationName) {\n    return null;\n  }\n\n  return variationName;\n}\n\nmodule.exports = getVariation;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst GoalTypeEnum = require('../enums/GoalTypeEnum');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst { objectValues } = require('../utils/ObjectUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\n\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Track;\nconst GOAL_TYPE_TO_TRACK_DEFAULT = GoalTypeEnum.ALL;\nconst GOAL_IDENTIFIER_SEPERATOR = '_vwo_';\nconst api = ApiEnum.TRACK;\n\nlet BatchEventsDispatcher;\nif (typeof process.env !== 'undefined') {\n  BatchEventsDispatcher = require('../utils/BatchEventsDispatcher');\n}\n\n/**\n * This API method: Marks the conversion of the campaign for a particular goal\n *\n * 1. validates the arguments being passed\n * 2. Checks if user is eligible to get bucketed into the campaign,\n * 3. Gets the assigned determinitic variation to the user(based on userId), if user becomes part of campaign\n * 4. Sends an impression call to VWO server to track goal data\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {Number} campaignKey               unique campaign test key\n * @param {String} userId                    ID assigned to a user\n * @param {String} goalIdentifier             unique campaign's goal identifier\n * @param {Object} options                   Optional params\n */\nfunction track(vwoInstance, campaignKey, userId, goalIdentifier, options = {}) {\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      revenueValue,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      goalTypeToTrack,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback,\n      eventProperties\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.TRACK,\n        campaignKey,\n        userId,\n        goalIdentifier,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback,\n        eventProperties\n      }) &&\n      (!goalTypeToTrack || (goalTypeToTrack && objectValues(GoalTypeEnum).includes(goalTypeToTrack)))\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n        file,\n        api: ApiEnum.TRACK\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n  config.apiName = api;\n  let revenuePropList = new Set();\n\n  // If no settings are found, simply do not track goal and return false\n  if (!settingsFile) {\n    return null;\n  }\n\n  let campaigns = [];\n  goalTypeToTrack = goalTypeToTrack || config.goalTypeToTrack || GOAL_TYPE_TO_TRACK_DEFAULT; // priority order - options > launchConfig > default\n  if (DataTypeUtil.isUndefined(shouldTrackReturningUser)) {\n    // if shouldTrackReturningUser is not given in options\n    if (DataTypeUtil.isBoolean(config.shouldTrackReturningUser)) {\n      // if shouldTrackReturningUser is given in config at launch\n      shouldTrackReturningUser = config.shouldTrackReturningUser;\n    } else {\n      shouldTrackReturningUser = false;\n    }\n  }\n  if (!DataTypeUtil.isString(campaignKey)) {\n    if (DataTypeUtil.isArray(campaignKey)) {\n      campaigns = CampaignUtil.getCampaignsForKeys(settingsFile, campaignKey);\n    } else {\n      campaigns = CampaignUtil.getCampaignsForGoal(settingsFile, goalIdentifier, goalTypeToTrack);\n    }\n  } else {\n    // Get the campaign settings based on campaignKey from the settings\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n    campaigns.push(campaign || { key: campaignKey });\n  }\n  const result = {};\n  let metricMap = {};\n  let events = [];\n  let areGlobalGoals = typeof process.env === 'undefined' ? false : campaigns.length > 1;\n\n  campaigns.forEach(\n    campaign =>\n      (result[campaign.key] = trackCampaignGoal(\n        vwoInstance,\n        campaign,\n        campaign.key,\n        userId,\n        settingsFile,\n        goalIdentifier,\n        revenueValue,\n        config,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        goalTypeToTrack,\n        shouldTrackReturningUser,\n        metaData,\n        metricMap,\n        revenuePropList,\n        events,\n        areGlobalGoals\n      ))\n  );\n  if (!Object.keys(result).length) {\n    return null;\n  }\n\n  if (typeof process.env === 'undefined') {\n    if (events && events.length) {\n      for (let k = 0; k < events.length; k++) {\n        vwoInstance.eventQueue.process(config, events[k], vwoInstance, { responseCallback });\n      }\n    }\n  } else if (!settingsFile.isEventArchEnabled && events && events.length) {\n    if (!areGlobalGoals) {\n      vwoInstance.eventQueue.process(config, events[0], vwoInstance, { responseCallback });\n    } else if (!config.isDevelopmentMode) {\n      BatchEventsDispatcher.dispatch(\n        {\n          ev: events\n        },\n        responseCallback,\n        Object.assign(\n          {},\n          {\n            a: vwoInstance.SettingsFileManager.getSettingsFile().accountId\n          },\n          vwoInstance.usageStats.getUsageStats()\n        ),\n        vwoInstance.SettingsFileManager.getSettingsFile().sdkKey\n      );\n    }\n  }\n\n  if (settingsFile.isEventArchEnabled && Object.keys(metricMap).length > 0) {\n    let properties = ImpressionUtil.getEventsBaseProperties(settingsFile, goalIdentifier);\n    let payload = ImpressionUtil.getTrackGoalPayloadData(\n      settingsFile,\n      userId,\n      goalIdentifier,\n      metricMap,\n      revenueValue,\n      revenuePropList,\n      eventProperties\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n    Object.keys(metricMap).forEach(function(key) {\n      DecisionUtil._saveUserData(\n        config,\n        metricMap[key].campaign,\n        metricMap[key].variationName,\n        metricMap[key].userId,\n        metricMap[key].metaData,\n        goalIdentifier\n      );\n    });\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, { isDevelopmentMode: config.isDevelopmentMode });\n  }\n\n  return result;\n}\n\nfunction trackCampaignGoal(\n  vwoInstance,\n  campaign,\n  campaignKey,\n  userId,\n  settingsFile,\n  goalIdentifier,\n  revenueValue,\n  config,\n  customVariables,\n  variationTargetingVariables,\n  userStorageData,\n  goalTypeToTrack,\n  shouldTrackReturningUser,\n  metaData,\n  metricMap,\n  revenuePropList,\n  events,\n  areGlobalGoals\n) {\n  // If matching campaign is not found with campaignKey or if found but is in not RUNNING state, simply return no variation\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.WARN,\n      LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey: campaignKey,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return false;\n  }\n\n  let campaignId = campaign.id;\n\n  // Get the campaign goal settings based on goalIdentifier\n  let goal = CampaignUtil.getCampaignGoal(settingsFile, campaign.key, goalIdentifier);\n\n  if (!goal) {\n    // If no goal is found, something is wrong with the goalIdentifier\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_GOAL_NOT_FOUND, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey: campaignKey\n      })\n    );\n    return false;\n  } else if (goalTypeToTrack !== GOAL_TYPE_TO_TRACK_DEFAULT && goal.type !== goalTypeToTrack) {\n    return false;\n  } else if (goal.type === GoalTypeEnum.REVENUE && !ValidateUtil.isValidValue(revenueValue)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TRACK_API_REVENUE_NOT_PASSED_FOR_REVENUE_GOAL, {\n        file,\n        userId,\n        goalIdentifier,\n        campaignKey\n      })\n    );\n    return false;\n  }\n\n  if (goal.type === GoalTypeEnum.REVENUE && goal.revenueProp) {\n    revenuePropList.add(goal.revenueProp);\n  }\n\n  let { variationId, variationName, storedGoalIdentifier } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    false,\n    goalIdentifier,\n    api\n  );\n\n  // Is User is a part of Campaign and has been decided to be a part of particular variation\n  if (variationName) {\n    if (storedGoalIdentifier) {\n      const identifiers = storedGoalIdentifier.split(GOAL_IDENTIFIER_SEPERATOR);\n      if (!identifiers.includes(goalIdentifier)) {\n        storedGoalIdentifier += GOAL_IDENTIFIER_SEPERATOR + goalIdentifier;\n        DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, storedGoalIdentifier);\n      } else if (!shouldTrackReturningUser && goal.mca !== -1) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_GOAL_ALREADY_TRACKED, {\n            file,\n            userId,\n            goalIdentifier,\n            campaignKey\n          })\n        );\n        return false;\n      }\n    }\n    // If goal is found, send an impression to VWO server for report stats\n    if (config.batchEvents) {\n      let properties = ImpressionUtil.buildBatchEventForTrackingGoal(\n        settingsFile,\n        campaignId,\n        variationId,\n        userId,\n        goal,\n        revenueValue\n      );\n      vwoInstance.batchEventsQueue.enqueue(properties);\n    } else if (settingsFile.isEventArchEnabled) {\n      metricMap[campaign.id] = {\n        config,\n        campaign,\n        variationName,\n        userId,\n        metaData,\n        goal\n      };\n      return true;\n    } else {\n      let properties = {};\n\n      if (areGlobalGoals) {\n        properties = ImpressionUtil.buildBatchEventForTrackingGoal(\n          settingsFile,\n          campaignId,\n          variationId,\n          userId,\n          goal,\n          revenueValue\n        );\n      } else {\n        properties = ImpressionUtil.buildEventForTrackingGoal(\n          settingsFile,\n          campaignId,\n          variationId,\n          userId,\n          goal,\n          revenueValue\n        );\n      }\n\n      events.push(properties);\n    }\n    DecisionUtil._saveUserData(config, campaign, variationName, userId, metaData, goalIdentifier);\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = track;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.IsFeatureEnabled;\n\n/**\n * This API checks: Whether a feature is enabled or not for the given user\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, sends a call to VWO server for tracking visitor\n *\n * @param {Object} vwoInstance       VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey       Unique key for a campaign\n * @param {String} userId            Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {Boolean}                 true if feature enabled, false otherwise\n */\nfunction isFeatureEnabled(vwoInstance, campaignKey, userId, options = {}) {\n  const api = ApiEnum.IS_FEATURE_ENABLED;\n  let areParamsValid = false;\n  if (DataTypeUtil.isObject(options)) {\n    var {\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      shouldTrackReturningUser,\n      metaData,\n      responseCallback\n    } = options;\n    // Check if arguments have valid data-type\n    if (\n      ValidateUtil.areValidParamsForAPIMethod({\n        method: ApiEnum.IS_FEATURE_ENABLED,\n        campaignKey,\n        userId,\n        customVariables,\n        variationTargetingVariables,\n        userStorageData,\n        shouldTrackReturningUser,\n        metaData,\n        responseCallback\n      })\n    ) {\n      areParamsValid = true;\n    }\n  }\n\n  if (areParamsValid === false) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n        file,\n        api: ApiEnum.isFeatureEnabled\n      })\n    );\n    return null;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply log and return false\n  if (!settingsFile) {\n    return null;\n  }\n\n  shouldTrackReturningUser = shouldTrackReturningUser || config.shouldTrackReturningUser || false;\n\n  // Get the campaign settings based on campaignKey from the settings\n  let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n  if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n    vwoInstance.logger.log(\n      LogLevelEnum.WARN,\n      LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n        file,\n        campaignKey,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  if (CampaignUtil.isAbCampaign(campaign)) {\n    // API not allowed for full-stack AB campaigns\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n        file,\n        campaignKey,\n        campaignType: campaign.type,\n        userId,\n        api\n      })\n    );\n\n    return null;\n  }\n\n  const { variation, variationName, variationId, isStoredVariation } = DecisionUtil.getVariation(\n    config,\n    settingsFile,\n    campaign,\n    campaignKey,\n    userId,\n    customVariables,\n    variationTargetingVariables,\n    userStorageData,\n    metaData,\n    true,\n    undefined,\n    api\n  );\n\n  let isFeatureEnabled = false;\n\n  if (variationName) {\n    isFeatureEnabled = CampaignUtil.isFeatureRolloutCampaign(campaign) || variation.isFeatureEnabled;\n\n    if (isStoredVariation && !shouldTrackReturningUser) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.CAMPAIGN_USER_ALREADY_TRACKED, {\n          file,\n          userId,\n          campaignKey,\n          api\n        })\n      );\n    } else {\n      // Variation found...let VWO server knows about it to show report stats\n      if (config.batchEvents) {\n        let properties = ImpressionUtil.buildBatchEventForTrackingUser(settingsFile, campaign.id, variationId, userId);\n        vwoInstance.batchEventsQueue.enqueue(properties);\n      } else if (settingsFile.isEventArchEnabled) {\n        let properties = ImpressionUtil.getEventsBaseProperties(\n          settingsFile,\n          EventEnum.VWO_VARIATION_SHOWN,\n          vwoInstance.usageStats.getUsageStats()\n        );\n        let payload = ImpressionUtil.getTrackUserPayloadData(\n          settingsFile,\n          userId,\n          EventEnum.VWO_VARIATION_SHOWN,\n          campaign.id,\n          variationId\n        );\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n      } else {\n        let properties = ImpressionUtil.buildEventForTrackingUser(\n          settingsFile,\n          campaign.id,\n          variationId,\n          userId,\n          vwoInstance.usageStats.getUsageStats()\n        );\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n      }\n\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n          file,\n          campaignKey,\n          userId,\n          status: isFeatureEnabled ? 'enabled' : 'disabled'\n        })\n      );\n\n      if (config.isDevelopmentMode) {\n        return { isFeatureEnabled };\n      }\n\n      return isFeatureEnabled;\n    }\n  }\n\n  vwoInstance.logger.log(\n    LogLevelEnum.INFO,\n    LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n      file,\n      campaignKey,\n      userId,\n      status: isFeatureEnabled ? 'enabled' : 'disabled'\n    })\n  );\n\n  if (isStoredVariation || config.isDevelopmentMode) {\n    return { isFeatureEnabled };\n  }\n\n  return { isFeatureEnabled };\n}\n\nmodule.exports = isFeatureEnabled;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Constants = require('../constants');\nconst ApiEnum = require('../enums/ApiEnum');\n\nconst DecisionUtil = require('../utils/DecisionUtil');\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst FeatureUtil = require('../utils/FeatureUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst ObjectUtil = require('../utils/ObjectUtil');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.GetFeatureVariableValue;\n\n/**\n * This API method:\n *\n * 1. Validates the arguments being passed\n * 2. Checks if user is eligible for campaign and check if feature is enabled for the user.\n * 4. If feature enabled, return the variable for that variation(if Feature Test),\n *    otherwise the default values being set in Feature\n *\n * @param {Object} vwoInstance   VWO instance which has logger, settingsFile etc.\n * @param {String} campaignKey   Unique key for a campaign\n * @param {String} variableKey   Unique key for a feature's variable\n * @param {String} userId        Unique identifier for the user\n * @param {Object} options           Optional params\n *\n * @return {string|number|double|boolean|null} Variable value as is set in the VWO app i.e.\n *                                             maintaining the data-type,\n *                                             null if anything fails like campaign / variable not found\n */\nfunction getFeatureVariableValue(vwoInstance, campaignKey, variableKey, userId, options = {}) {\n  try {\n    const api = ApiEnum.GET_FEATURE_VARIABLE_VALUE;\n    let areParamsValid = false;\n    if (DataTypeUtil.isObject(options)) {\n      var { customVariables, variationTargetingVariables, userStorageData, metaData } = options;\n      // Check if arguments have valid data-type\n      if (\n        ValidateUtil.areValidParamsForAPIMethod({\n          method: ApiEnum.GET_FEATURE_VARIABLE_VALUE,\n          campaignKey,\n          variableKey,\n          userId,\n          customVariables,\n          variationTargetingVariables,\n          userStorageData,\n          metaData\n        })\n      ) {\n        areParamsValid = true;\n      }\n    }\n\n    if (areParamsValid === false) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_BAD_PARAMETERS, {\n          file,\n          api: ApiEnum.GetFeatureVariableValue\n        })\n      );\n      return null;\n    }\n\n    // Get the cached configuration\n    let config = vwoInstance.SettingsFileManager.getConfig();\n    let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n    config.apiName = api;\n\n    // If no settings are found, simply return no variation\n    if (!settingsFile) {\n      return null;\n    }\n\n    let campaign = CampaignUtil.getCampaign(settingsFile, campaignKey);\n\n    if (!campaign || campaign.status !== Constants.STATUS_RUNNING) {\n      vwoInstance.logger.log(\n        LogLevelEnum.WARN,\n        LogMessageUtil.build(LogMessageEnum.WARNING_MESSAGES.CAMPAIGN_NOT_RUNNING, {\n          file,\n          campaignKey,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isAbCampaign(campaign)) {\n      // API not allowed for full-stack AB campaigns\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_NOT_APPLICABLE, {\n          file,\n          campaignKey,\n          campaignType: campaign.type,\n          userId,\n          api\n        })\n      );\n\n      return null;\n    }\n\n    let variable;\n    const { variation, variationName } = DecisionUtil.getVariation(\n      config,\n      settingsFile,\n      campaign,\n      campaignKey,\n      userId,\n      customVariables,\n      variationTargetingVariables,\n      userStorageData,\n      metaData,\n      false,\n      undefined,\n      api\n    );\n\n    if (!variationName) {\n      vwoInstance.logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_STATUS, {\n          file,\n          campaignKey,\n          userId,\n          status: 'disabled'\n        })\n      );\n\n      return null;\n    }\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      variable = FeatureUtil.getVariableForFeature(campaign, variableKey);\n    } else if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      variable = FeatureUtil.getVariableValueForVariation(campaign, variation, variableKey);\n\n      if (ObjectUtil.areObjectKeys(variable) && variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_VARIABLE_VALUE, {\n            file,\n            variableKey,\n            campaignKey: campaign.key,\n            variableValue: variable.value,\n            userId\n          })\n        );\n      } else if (ObjectUtil.areObjectKeys(variable) && !variation.isFeatureEnabled) {\n        vwoInstance.logger.log(\n          LogLevelEnum.INFO,\n          LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.FEATURE_VARIABLE_DEFAULT_VALUE, {\n            file,\n            variableKey,\n            variationName\n          })\n        );\n      }\n    }\n\n    if (!ObjectUtil.areObjectKeys(variable)) {\n      vwoInstance.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.VARIABLE_NOT_FOUND, {\n          file,\n          variableKey,\n          userId\n        })\n      );\n\n      return null;\n    }\n\n    let variableValue = variable.value;\n    let typeCastedValue = FeatureUtil.getTypeCastVariableValue(variableValue, variable.type);\n\n    return typeCastedValue;\n  } catch (err) {\n    vwoInstance.logger.log(LogLevelEnum.ERROR, err.message);\n\n    return null;\n  }\n}\n\nmodule.exports = getFeatureVariableValue;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('./CampaignUtil');\nconst DataTypeUtil = require('./DataTypeUtil');\nconst FeatureVariableTypeEnum = require('../enums/FeatureVariableTypeEnum');\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.FeatureUtil;\n\nlet FeatureUtil = {\n  getVariableForFeature: (campaign, variableKey) => {\n    let variableData = {};\n\n    if (CampaignUtil.isFeatureRolloutCampaign(campaign)) {\n      let variables = campaign.variables || [];\n\n      for (let i = 0; i < variables.length; i++) {\n        if (variables[i].key === variableKey) {\n          variableData = variables[i];\n\n          break;\n        }\n      }\n\n      return variableData;\n    }\n\n    return variableData;\n  },\n  getVariableValueForVariation: (campaign, variation, variableKey) => {\n    let variationVariable = {};\n\n    if (CampaignUtil.isFeatureTestCampaign(campaign)) {\n      if (!variation || !variation || !variation.variables) {\n        return variationVariable;\n      }\n\n      if (!variation.isFeatureEnabled) {\n        variation = CampaignUtil.getControlForCampaign(campaign);\n      }\n\n      for (let i = 0; i < variation.variables.length; i++) {\n        let variable = variation.variables[i];\n\n        if (variableKey === variable.key) {\n          variationVariable = variable;\n          break;\n        }\n      }\n    }\n\n    return variationVariable;\n  },\n  getTypeCastVariableValue: (variableValue, variableType) => {\n    let typeCastedValue;\n\n    switch (variableType) {\n      case FeatureVariableTypeEnum.INTEGER:\n        typeCastedValue = parseInt(variableValue, 10);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.DOUBLE:\n        typeCastedValue = parseFloat(variableValue);\n        if (!DataTypeUtil.isNumber(typeCastedValue) || isNaN(typeCastedValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.BOOLEAN:\n        if (!DataTypeUtil.isBoolean(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      case FeatureVariableTypeEnum.JSON:\n        if (!DataTypeUtil.isObject(variableValue)) {\n          logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, {\n              file,\n              variableValue,\n              variableType\n            })\n          );\n          typeCastedValue = null;\n        } else {\n          typeCastedValue = variableValue;\n        }\n        break;\n\n      default:\n        typeCastedValue = variableValue;\n        break;\n    }\n\n    return typeCastedValue;\n  }\n};\n\nmodule.exports = FeatureUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst FeatureVariableTypeEnum = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json'\n};\n\nmodule.exports = FeatureVariableTypeEnum;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiEnum = require('../enums/ApiEnum');\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst EventEnum = require('../enums/EventEnum');\nconst ValidateUtil = require('../utils/ValidateUtil');\nconst ImpressionUtil = require('../utils/ImpressionUtil');\nconst DataTypeUtil = require('../utils/DataTypeUtil');\n\nlet BatchEventsDispatcher;\n\nif (typeof process.env !== 'undefined') {\n  BatchEventsDispatcher = require('../utils/BatchEventsDispatcher');\n}\n\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.Push;\n\n/**\n * This API method: Pushes the key-value tag pair for a particular user\n *\n * 1. validates the arguments being passed\n * 2. Sends a call to VWO push api\n *\n * @param {Object} vwoInstance               VWO instance which has logger, settingsFile etc.\n * @param {String} tagKey                    tag key\n * @param {String} tagValue                  tag Value\n * @param {String} userId                    ID assigned to a user\n *\n * @return {Boolean}                         true if request is pushed to eventQueue, false if params are invalid or settings file is unavailable\n */\nfunction push(vwoInstance, tagKey, tagValue, userId, customDimensionMap, { responseCallback } = {}) {\n  const api = ApiEnum.PUSH;\n\n  if (\n    !ValidateUtil.areValidParamsForAPIMethod({\n      method: ApiEnum.PUSH,\n      tagKey,\n      tagValue,\n      userId,\n      customDimensionMap,\n      responseCallback\n    })\n  ) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n        file,\n        method: api\n      })\n    );\n    return false;\n  }\n\n  if (tagKey.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_KEY_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId\n      })\n    );\n    return false;\n  }\n\n  if (tagValue.length > 255) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.TAG_VALUE_LENGTH_EXCEEDED, {\n        file,\n        tagKey,\n        userId,\n        tagValue\n      })\n    );\n    return false;\n  }\n\n  if (tagKey === ' ' && tagValue === ' ' && (!customDimensionMap || Object.keys(customDimensionMap).length === 0)) {\n    vwoInstance.logger.log(\n      LogLevelEnum.ERROR,\n      LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.PUSH_INVALID_PARAMS, {\n        file,\n        method: api\n      })\n    );\n    return false;\n  }\n\n  if (tagKey !== ' ' && tagValue !== ' ') {\n    customDimensionMap[tagKey] = tagValue;\n  }\n\n  // Get the cached configuration\n  let config = vwoInstance.SettingsFileManager.getConfig();\n  let settingsFile = vwoInstance.SettingsFileManager.getSettingsFile(api);\n\n  // If no settings are found, simply false\n  if (!settingsFile) {\n    return false;\n  }\n\n  let result = {};\n  if (config.batchEvents) {\n    Object.keys(customDimensionMap).forEach(key => {\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n      let properties = ImpressionUtil.buildBatchEventForPushing(settingsFile, key, tagValue, userId);\n      vwoInstance.batchEventsQueue.enqueue(properties);\n\n      result[key] = true;\n    });\n  } else if (settingsFile.isEventArchEnabled) {\n    let properties = ImpressionUtil.getEventsBaseProperties(settingsFile, EventEnum.VWO_SYNC_VISITOR_PROP);\n    let payload = ImpressionUtil.getPushPayloadData(\n      settingsFile,\n      userId,\n      EventEnum.VWO_SYNC_VISITOR_PROP,\n      customDimensionMap\n    );\n    vwoInstance.eventQueue.process(config, properties, vwoInstance, { payload, responseCallback });\n\n    result.success = true;\n  } else {\n    const events = [];\n    const customDimensionKeys = Object.keys(customDimensionMap);\n\n    customDimensionKeys.forEach(key => {\n      let properties;\n      const tagValue = DataTypeUtil.isString(customDimensionMap[key])\n        ? customDimensionMap[key]\n        : JSON.stringify(customDimensionMap[key]);\n\n      if (typeof process.env === 'undefined') {\n        properties = ImpressionUtil.buildEventForPushing(settingsFile, key, tagValue, userId);\n        vwoInstance.eventQueue.process(config, properties, vwoInstance, { responseCallback });\n      } else if (customDimensionKeys.length === 1) {\n        properties = ImpressionUtil.buildEventForPushing(settingsFile, key, tagValue, userId);\n      } else {\n        properties = ImpressionUtil.buildBatchEventForPushing(settingsFile, key, tagValue, userId);\n      }\n\n      events.push(properties);\n      result[key] = true;\n    });\n\n    if (typeof process.env !== 'undefined') {\n      if (customDimensionKeys.length === 1) {\n        vwoInstance.eventQueue.process(config, events[0], vwoInstance, { responseCallback });\n      } else {\n        if (!config.isDevelopmentMode) {\n          BatchEventsDispatcher.dispatch(\n            {\n              ev: events\n            },\n            responseCallback,\n            Object.assign(\n              {},\n              {\n                a: vwoInstance.SettingsFileManager.getSettingsFile().accountId\n              },\n              vwoInstance.usageStats.getUsageStats()\n            ),\n            vwoInstance.SettingsFileManager.getSettingsFile().sdkKey\n          );\n        }\n      }\n    }\n  }\n\n  if (config.isDevelopmentMode) {\n    return Object.assign({}, result, { isDevelopmentMode: config.isDevelopmentMode });\n  }\n\n  return result;\n}\n\nmodule.exports = push;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DataTypeUtil = require('../utils/DataTypeUtil');\nconst EventDispatcher = require('../utils/EventDispatcherUtil');\n\nconst logging = require('./logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\n\nconst file = FileNameEnum.EventQueue;\n\nclass EventQueue {\n  constructor() {\n    this.running = false;\n    this.queue = [];\n  }\n\n  process(config, properties, vwoInstance, { payload, responseCallback } = {}) {\n    if (config && config.isDevelopmentMode) {\n      logger.log(\n        LogLevelEnum.DEBUG,\n        LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.CONFIG_DEVELOPMENT_MODE_STATUS, {\n          file\n        })\n      );\n      return;\n    }\n\n    this.enqueue(properties, vwoInstance, { payload, responseCallback });\n  }\n\n  enqueue(properties, vwoInstance, { payload, responseCallback }) {\n    this.queue.push({\n      eventName: properties.eventName,\n      properties: properties,\n      callback: () => {\n        if (payload) {\n          EventDispatcher.dispatchPostCall(properties, payload, { responseCallback });\n        } else {\n          EventDispatcher.dispatchGetCall(properties, { responseCallback });\n        }\n      }\n    });\n\n    logger.log(\n      LogLevelEnum.INFO,\n      LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.EVENT_QUEUE, {\n        file,\n        queueType: 'normal',\n        event: 'VWO_MASKED_PAYLOAD'\n      })\n    );\n\n    vwoInstance.eventQueue.executeNext(properties);\n\n    if (!this.running) {\n      // if nothing is running, then start the engines!\n      this.executeNext(properties);\n    }\n\n    return this;\n  }\n\n  executeNext(properties) {\n    this.running = false;\n\n    // get the first element off the queue\n    if (this.queue && this.queue.length) {\n      let event = this.queue.shift();\n\n      if (event) {\n        this.running = true;\n        if (event.callback && DataTypeUtil.isFunction(event.callback)) {\n          event.callback(properties);\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EventQueue;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst FunctionUtil = require('./FunctionUtil');\nconst EventEnum = require('../enums/EventEnum');\nconst excludedProperties = ['url'];\n\nconst file = FileNameEnum.EventDispatcherUtil;\n\nlet EventDispatcher = {\n  dispatchGetCall: function(properties, { responseCallback }) {\n    let parsedUrl;\n    let queryParams = '?';\n\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n      if (typeof process.env === 'undefined') {\n        parsedUrl = new URL(properties.url);\n\n        require('./HttpImageUtil').sendCall(parsedUrl, queryParams, { successCallback: responseCallback });\n      } else {\n        const url = require('url');\n\n        parsedUrl = url.parse(properties.url);\n\n        require('./HttpHandlerUtil').sendGetCall(parsedUrl, queryParams, null, (error, response) => {\n          this.handleGetResponse(properties, error, response);\n          if (responseCallback) {\n            responseCallback(error, response);\n          }\n        });\n      }\n    } catch (err) {\n      let endPoint = properties.url;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file: FileNameEnum.EventDispatcher,\n          endPoint,\n          err\n        })\n      );\n    }\n\n    return false;\n  },\n\n  handleGetResponse: function(properties, error, response) {\n    if (error) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file,\n          endPoint: response.endPoint,\n          err: error\n        })\n      );\n      return false;\n    } else {\n      const baseParams = {\n        file,\n        endPoint: response.endPoint,\n        accountId: properties && properties.account_id\n      };\n      let params = {};\n      if (baseParams.endPoint.includes('push')) {\n        let customVariables = JSON.parse(properties.tags).u;\n        params = Object.assign({}, baseParams, { customVariables: customVariables });\n        params.mainKeys = `customDimension:${JSON.stringify(params.customVariables)}`;\n      } else {\n        params = Object.assign({}, baseParams, {\n          campaignId: properties && properties.experiment_id,\n          variationId: properties && properties.combination\n        });\n        params.mainKeys = `campaignId:${params.campaignId} and variationId:${params.variationId}`;\n      }\n      logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n      return true;\n    }\n  },\n\n  dispatchPostCall: function(properties, payload, { responseCallback }) {\n    let parsedUrl;\n    let queryParams = '?';\n\n    queryParams += FunctionUtil.convertObjectKeysToString(properties, excludedProperties);\n\n    try {\n      // Require files only if required in respective Engine i.e. Node / Browser\n\n      if (typeof process.env === 'undefined') {\n        if (typeof XMLHttpRequest === 'undefined') {\n          require('./FetchUtil')\n            .send({\n              method: 'POST',\n              url: `${properties.url}${queryParams}`,\n              payload\n            })\n            .then(() => {\n              this.handlePostResponse(properties, payload);\n              if (responseCallback) {\n                responseCallback(null, { status: 'success' });\n              }\n            })\n            .catch(error => {\n              this.handlePostResponse(properties, payload, error);\n              responseCallback(error, { status: 'failure' });\n            });\n        }\n\n        require('./XhrUtil')\n          .send({\n            method: 'POST',\n            url: `${properties.url}${queryParams}`,\n            payload\n          })\n          .then(() => {\n            this.handlePostResponse(properties, payload);\n            if (responseCallback) {\n              responseCallback(null, { status: 'success' });\n            }\n          })\n          .catch(error => {\n            this.handlePostResponse(properties, payload, error);\n            responseCallback(error, { status: 'failure' });\n          });\n      } else {\n        const url = require('url');\n\n        parsedUrl = url.parse(properties.url);\n\n        require('./HttpHandlerUtil').sendPostCall(parsedUrl, payload, queryParams, null, error => {\n          this.handlePostResponse(properties, payload, error);\n        });\n      }\n    } catch (err) {\n      let endPoint = properties.url;\n\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file: FileNameEnum.EventDispatcherUtil,\n          endPoint,\n          err\n        })\n      );\n    }\n\n    return false;\n  },\n\n  handlePostResponse: function(properties, payload, error) {\n    let endPoint = properties.url;\n\n    if (error) {\n      logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.IMPRESSION_FAILED, {\n          file,\n          endPoint: endPoint,\n          err: error\n        })\n      );\n      return false;\n    } else {\n      let event = `${properties.en} event`;\n      if (properties.en === EventEnum.VWO_SYNC_VISITOR_PROP) {\n        delete payload.d.visitor.props.vwo_fs_environment;\n        event = `visitor property:${JSON.stringify(payload.d.visitor.props)}`;\n      }\n\n      logger.log(\n        LogLevelEnum.INFO,\n        LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS_FOR_EVENT_ARCH, {\n          file,\n          endPoint,\n          accountId: properties.a,\n          event: event\n        })\n      );\n\n      return true;\n    }\n  }\n};\n\nmodule.exports = EventDispatcher;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logging = require('../services/logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\nconst logger = logging.getLogger();\nconst file = FileNameEnum.HttpImageUtil;\n\nconst noop = () => {};\n\nconst printLog = (url, queryParams) => {\n  const properties = new URLSearchParams(queryParams);\n\n  const baseParams = {\n    file,\n    endPoint: `https://${url.host}${url.pathname}`,\n    accountId: properties && properties.get('account_id')\n  };\n  let params = {};\n  if (baseParams.endPoint.includes('push')) {\n    let customVariables = JSON.parse(properties.get('tags')).u;\n    params = Object.assign({}, baseParams, { customVariables: customVariables });\n    params.mainKeys = `customDimension:${JSON.stringify(params.customVariables)}`;\n  } else {\n    params = Object.assign({}, baseParams, {\n      campaignId: properties && properties.get('experiment_id'),\n      variationId: properties && properties.get('combination')\n    });\n    params.mainKeys = `campaignId:${params.campaignId} and variationId:${params.variationId}`;\n  }\n  logger.log(LogLevelEnum.INFO, LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.IMPRESSION_SUCCESS, params));\n};\n\nconst HttpImageUtil = {\n  sendCall: function(url, queryParams, options = {}) {\n    let endPoint = `https://${url.host}${url.pathname}${queryParams}`;\n\n    let { successCallback, errorCallback } = options;\n\n    errorCallback = errorCallback || successCallback;\n\n    let isCallbackCalled = false;\n\n    if (typeof Image === 'undefined') {\n      fetch(endPoint)\n        .then(() => {\n          if (isCallbackCalled) {\n            return;\n          }\n          isCallbackCalled = true;\n          successCallback(null, { status: 'success' });\n        })\n        .catch(_err => {\n          if (isCallbackCalled) {\n            return;\n          }\n          isCallbackCalled = true;\n          errorCallback(null, { status: 'success' });\n          printLog(url, queryParams);\n        });\n\n      return;\n    }\n\n    let img = new Image();\n\n    this.handleGetCall(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled);\n  },\n\n  handleGetCall: function(url, queryParams, img, successCallback, errorCallback, endPoint, isCallbackCalled) {\n    successCallback = successCallback || noop;\n    errorCallback = errorCallback || noop;\n\n    img.onload = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      successCallback(null, { status: 'success' });\n      printLog(url, queryParams);\n    };\n\n    img.onerror = function() {\n      if (isCallbackCalled) {\n        return;\n      }\n      isCallbackCalled = true;\n      errorCallback(null, { status: 'success' });\n      printLog(url, queryParams);\n    };\n\n    img.src = endPoint;\n\n    return img;\n  }\n};\nmodule.exports = HttpImageUtil;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CampaignUtil = require('../utils/CampaignUtil');\nconst FunctionUtil = require('../utils/FunctionUtil');\nconst SettingsFileUtil = require('../utils/SettingsFileUtil');\n\nconst logging = require('./logging');\nconst FileNameEnum = require('../enums/FileNameEnum');\nconst validateSettingsFile = require('../schemas/SettingsFileSchema');\nconst { isObject } = require('../utils/DataTypeUtil');\nconst { LogLevelEnum, LogMessageEnum, LogMessageUtil } = logging;\n\nconst file = FileNameEnum.SettingsFileManager;\n\nclass SettingsFileManager {\n  // PRIVATE METHODS\n\n  constructor(config) {\n    if (config) {\n      if (\n        (config.settingsFile && isObject(config.settingsFile.campaigns)) ||\n        (config.settingsFile && !config.settingsFile.campaigns)\n      ) {\n        config.settingsFile.campaigns = [];\n      }\n\n      this._configObj = config;\n      this._clonedSettingsFile = config.settingsFile ? FunctionUtil.cloneObject(config.settingsFile) : null;\n    } else {\n      this._configObj = null;\n      this._clonedSettingsFile = null;\n    }\n  }\n\n  _setVariationBucketing(campaign) {\n    CampaignUtil.setVariationAllocation(campaign);\n  }\n\n  // PUBLIC METHODS\n\n  isSettingsFileValid() {\n    if (!this._configObj || !this._clonedSettingsFile) {\n      return false;\n    }\n    let isValidSettingsFile = validateSettingsFile(this._clonedSettingsFile);\n\n    if (!isValidSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.SETTINGS_FILE_CORRUPTED, {\n          file\n        })\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  checkAndPoll() {\n    if (!this._configObj.pollingInterval || !this._configObj.sdkKey) {\n      return;\n    }\n\n    let lastSettingsFile = JSON.stringify(this._clonedSettingsFile);\n    setInterval(() => {\n      SettingsFileUtil.get(this._clonedSettingsFile.accountId, this._configObj.sdkKey)\n        .then(latestSettingsFile => {\n          this._configObj.logger.log(\n            LogLevelEnum.INFO,\n            LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SUCCESS, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n          const stringifiedLatestSettingsFile = JSON.stringify(latestSettingsFile);\n\n          if (stringifiedLatestSettingsFile !== lastSettingsFile) {\n            lastSettingsFile = stringifiedLatestSettingsFile;\n\n            this.updateSettingsFile(latestSettingsFile);\n\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SETTINGS_FILE_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          } else {\n            this._configObj.logger.log(\n              LogLevelEnum.INFO,\n              LogMessageUtil.build(LogMessageEnum.INFO_MESSAGES.POLLING_SETTINGS_FILE_NOT_UPDATED, {\n                file,\n                accountId: this._clonedSettingsFile.accountId\n              })\n            );\n          }\n        })\n        .catch(_e => {\n          this._configObj.logger.log(\n            LogLevelEnum.ERROR,\n            LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.POLLING_FAILED, {\n              file,\n              accountId: this._clonedSettingsFile.accountId\n            })\n          );\n        });\n    }, this._configObj.pollingInterval);\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.POLLING_SETTINGS_FILE_REGISTERED, {\n        file,\n        pollingInterval: this._configObj.pollingInterval\n      })\n    );\n  }\n  processSettingsFile() {\n    let settingsFile = this._clonedSettingsFile;\n\n    for (let i = 0; i < settingsFile.campaigns.length; i++) {\n      let campaign = settingsFile.campaigns[i];\n\n      this._setVariationBucketing(campaign);\n    }\n\n    this._configObj.logger.log(\n      LogLevelEnum.DEBUG,\n      LogMessageUtil.build(LogMessageEnum.DEBUG_MESSAGES.SETTINGS_FILE_PROCESSED, {\n        file,\n        accountId: this._clonedSettingsFile.accountId\n      })\n    );\n\n    return settingsFile;\n  }\n\n  /**\n   * Fetch latest settings-file and update so that vwoClientInstance could use latest settings\n   * Helpful especially when using webhooks\n   *\n   * @param {Number} accountId\n   * @param {String} sdkKey\n   *\n   * @return {Promise}\n   */\n  getAndUpdateSettingsFile(accountId = this._clonedSettingsFile.accountId, sdkKey = this._clonedSettingsFile.sdkKey) {\n    return new Promise((resolve, _reject) => {\n      SettingsFileUtil.get(accountId, sdkKey, null, { isViaWebhook: true })\n        .then(settings => {\n          this.updateSettingsFile(settings);\n          resolve(settings);\n        })\n        .catch(_err => {});\n    });\n  }\n\n  /**\n   * Update the settings-file on the instance so that latest settings could be used from next hit onwards\n   * @param {Object} settings\n   */\n  updateSettingsFile(settings) {\n    this._clonedSettingsFile = FunctionUtil.cloneObject(settings);\n    this.processSettingsFile();\n  }\n\n  getConfig() {\n    return this._configObj;\n  }\n\n  getSettingsFile(api) {\n    if (!this._clonedSettingsFile) {\n      this._configObj.logger.log(\n        LogLevelEnum.ERROR,\n        LogMessageUtil.build(LogMessageEnum.ERROR_MESSAGES.API_HAS_CORRUPTED_SETTINGS_FILE, {\n          file,\n          api\n        })\n      );\n    }\n    return this._clonedSettingsFile;\n  }\n}\nmodule.exports = SettingsFileManager;\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet { validate, number, string, boolean, array, object, optional, union, type, record } = require('superstruct');\n\nconst campaignGoalSchema = type({\n  id: union([number(), string()]),\n  identifier: string(),\n  type: string(),\n  revenueProp: optional(string()),\n  mca: optional(union([number(), string()]))\n});\n\nconst variableObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  value: union([number(), string(), boolean()])\n});\n\nconst campaignVariationSchema = type({\n  id: union([number(), string()]),\n  name: string(),\n  weight: union([number(), string()]),\n  changes: optional(object()),\n  segments: optional(object()),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  isFeatureEnabled: optional(boolean()),\n  startVariationAllocation: optional(number()),\n  endVariationAllocation: optional(number())\n});\n\nconst campaignObjectSchema = type({\n  id: union([number(), string()]),\n  type: string(),\n  key: string(),\n  status: string(),\n  name: string(),\n  isBucketingSeedEnabled: optional(boolean()),\n  percentTraffic: number(),\n  goals: union([object(), array(campaignGoalSchema)]),\n  variations: union([object(), array(campaignVariationSchema)]),\n  variables: optional(union([object(), array(variableObjectSchema)])),\n  segments: object(),\n  isForcedVariationEnabled: optional(boolean()),\n  isUserListEnabled: optional(boolean())\n});\n\nconst groupSchema = type({\n  groupName: string(),\n  campaigns: array(number())\n});\n\nconst settingsFileSchema = type({\n  sdkKey: optional(string()),\n  version: union([number(), string()]),\n  accountId: union([number(), string()]),\n  campaigns: array(campaignObjectSchema),\n  campaignGroups: optional(record(string(), number())),\n  isEventArchEnabled: optional(boolean()),\n  collectionPrefix: optional(string()),\n  groups: optional(union([object(), record(string(), groupSchema)]))\n});\n\nconst validateSettingsFile = function(settings) {\n  const [error] = validate(settings, settingsFileSchema);\n  return !error;\n};\n\nmodule.exports = validateSettingsFile;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context) {\n  if (result === true) ; else if (result === false) {\n    yield context.fail();\n  } else {\n    yield* result;\n  }\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction iteratorShift(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n\n/**\n * `Struct` objects encapsulate the schema for a specific data type (with\n * optional coercion). You can then use the `assert`, `is` or `validate` helpers\n * to validate unknown data against a struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      coercer = value => value,\n      validator = () => [],\n      refiner = () => []\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.coercer = coercer;\n    this.validator = validator;\n    this.refiner = refiner;\n  }\n\n}\n/**\n * `StructError` objects are thrown (or returned) by Superstruct when its\n * validation fails. The error represents the first error encountered during\n * validation. But they also have an `error.failures` property that holds\n * information for all of the failures encountered.\n */\n\nclass StructError extends TypeError {\n  constructor(failure, moreFailures) {\n    const {\n      path,\n      value,\n      type,\n      branch\n    } = failure,\n          rest = _objectWithoutProperties(failure, [\"path\", \"value\", \"type\", \"branch\"]);\n\n    const message = `Expected a value of type \\`${type}\\`${path.length ? ` for \\`${path.join('.')}\\`` : ''} but received \\`${JSON.stringify(value)}\\`.`;\n    let failuresResult;\n\n    function failures() {\n      if (!failuresResult) {\n        failuresResult = [failure, ...moreFailures];\n      }\n\n      return failuresResult;\n    }\n\n    super(message);\n    this.value = value;\n    Object.assign(this, rest);\n    this.type = type;\n    this.path = path;\n    this.branch = branch;\n    this.failures = failures;\n    this.stack = new Error().stack;\n    this.__proto__ = StructError.prototype;\n  }\n\n}\n/**\n * Assert that a value passes a `Struct`, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Coerce a value with the coercion logic of `Struct` and validate it.\n */\n\nfunction coerce(value, struct) {\n  const ret = struct.coercer(value);\n  assert(ret, struct);\n  return ret;\n}\n/**\n * Check if a value passes a `Struct`.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a `Struct`, returning an error if invalid.\n */\n\nfunction validate(value, struct, coercing = false) {\n  if (coercing) {\n    value = struct.coercer(value);\n  }\n\n  const failures = check(value, struct);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    const error = new StructError(failure, failures);\n    return [error, undefined];\n  } else {\n    return [undefined, value];\n  }\n}\n/**\n * Check a value against a `Struct`, returning an iterable of failures.\n */\n\nfunction* check(value, struct, path = [], branch = []) {\n  const {\n    type\n  } = struct;\n  const ctx = {\n    value,\n    type,\n    branch,\n    path,\n\n    fail(props = {}) {\n      return _objectSpread2({\n        value,\n        type,\n        path,\n        branch: [...branch, value]\n      }, props);\n    },\n\n    check(v, s, parent, key) {\n      const p = parent !== undefined ? [...path, key] : path;\n      const b = parent !== undefined ? [...branch, parent] : branch;\n      return check(v, s, p, b);\n    }\n\n  };\n  const failures = toFailures(struct.validator(value, ctx), ctx);\n  const failure = iteratorShift(failures);\n\n  if (failure) {\n    yield failure;\n    yield* failures;\n  } else {\n    yield* toFailures(struct.refiner(value, ctx), ctx);\n  }\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n */\n\nfunction coercion(struct, coercer) {\n  const fn = struct.coercer;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    coercer: value => {\n      return fn(coercer(value));\n    }\n  }));\n}\n/**\n * Augment a struct to coerce a default value for missing values.\n *\n * Note: You must use `coerce(value, Struct)` on the value before validating it\n * to have the value defaulted!\n */\n\nfunction defaulted(S, fallback, strict) {\n  return coercion(S, x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (strict !== true && isPlainObject(x) && isPlainObject(f)) {\n      const ret = _objectSpread2({}, x);\n\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Coerce a value to mask its properties to only that defined in the struct.\n */\n\nfunction masked(S) {\n  return coercion(S, x => {\n    if (!isPlainObject(x)) {\n      return x;\n    }\n\n    const ret = {};\n\n    for (const key in S.schema) {\n      ret[key] = x[key];\n    }\n\n    return ret;\n  });\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Augment a string or array struct to constrain its length to zero.\n */\n\nfunction empty(S) {\n  return refinement(S, `${S.type} & Empty`, value => {\n    return value.length === 0;\n  });\n}\n/**\n * Augment a string or array struct to constrain its length to being between a\n * minimum and maximum size.\n */\n\nfunction length(S, min, max) {\n  return refinement(S, `${S.type} & Length<${min},${max}>`, value => {\n    return min < value.length && value.length < max;\n  });\n}\n/**\n * Refine a string struct to match a specific regexp pattern.\n */\n\nfunction pattern(S, regexp) {\n  return refinement(S, `${S.type} & Pattern<${regexp.source}>`, value => {\n    return regexp.test(value);\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n */\n\nfunction refinement(struct, type, refiner) {\n  const fn = struct.refiner;\n  return new Struct(_objectSpread2(_objectSpread2({}, struct), {}, {\n    type,\n\n    *refiner(value, fail) {\n      yield* toFailures(fn(value, fail), fail);\n      yield* toFailures(refiner(value, fail), fail);\n    }\n\n  }));\n}\n\n/**\n * Validate any value.\n */\n\nfunction any() {\n  return struct('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: `Array<${Element ? Element.type : 'unknown'}>`,\n    schema: Element,\n    coercer: value => {\n      return Element && Array.isArray(value) ? value.map(v => coerce(v, Element)) : value;\n    },\n\n    *validator(value, ctx) {\n      if (!Array.isArray(value)) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Element) {\n        for (const [i, v] of value.entries()) {\n          yield* ctx.check(v, Element, value, i);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Validate that boolean values.\n */\n\nfunction boolean() {\n  return struct('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Validate that `Date` values.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return struct('Date', value => {\n    return value instanceof Date && !isNaN(value.getTime());\n  });\n}\n/**\n * Validate that a value dynamically, determing which struct to use at runtime.\n */\n\nfunction dynamic(fn) {\n  return struct('Dynamic<...>', (value, ctx) => {\n    return ctx.check(value, fn(value, ctx));\n  });\n}\nfunction enums(values) {\n  return struct(`Enum<${values.map(toLiteralString)}>`, value => {\n    return values.includes(value);\n  });\n}\n/**\n * Validate that a value is a function.\n */\n\nfunction func() {\n  return struct('Function', value => {\n    return typeof value === 'function';\n  });\n}\n/**\n * Validate that a value is an instance of a class.\n */\n\nfunction instance(Class) {\n  return struct(`InstanceOf<${Class.name}>`, value => {\n    return value instanceof Class;\n  });\n}\nfunction intersection(Structs) {\n  return struct(Structs.map(s => s.type).join(' & '), function* (value, ctx) {\n    for (const S of Structs) {\n      yield* ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate a value lazily, by constructing the struct right before the first\n * validation. This is useful for cases where you want to have self-referential\n * structs for nested data structures.\n */\n\nfunction lazy(fn) {\n  let S;\n  return struct('Lazy<...>', (value, ctx) => {\n    if (!S) {\n      S = fn();\n    }\n\n    return ctx.check(value, S);\n  });\n}\nfunction literal(constant) {\n  return struct(`Literal<${toLiteralString(constant)}>`, value => {\n    return value === constant;\n  });\n}\n/**\n * Validate that a value is a map with specific key and value entries.\n */\n\nfunction map(Key, Value) {\n  return struct(`Map<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (!(value instanceof Map)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [k, v] of value.entries()) {\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a value always fails.\n */\n\nfunction never() {\n  return struct('never', () => false);\n}\n/**\n * Augment a struct to make it accept `null` values.\n */\n\nfunction nullable(S) {\n  return new Struct({\n    type: `${S.type} | null`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === null || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a value is a number.\n */\n\nfunction number() {\n  return struct(`number`, value => {\n    return typeof value === 'number' && !isNaN(value);\n  });\n}\nfunction object(Structs) {\n  const knowns = Structs ? Object.keys(Structs) : [];\n  const Never = never();\n  return new Struct({\n    type: Structs ? `Object<{${knowns.join(',')}}>` : 'Object',\n    schema: Structs ? Structs : null,\n    coercer: Structs ? createObjectCoercer(Structs) : x => x,\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      if (Structs) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          const Value = Structs[key];\n          const v = value[key];\n          yield* ctx.check(v, Value, value, key);\n        }\n\n        for (const key of unknowns) {\n          const v = value[key];\n          yield* ctx.check(v, Never, value, key);\n        }\n      }\n    }\n\n  });\n}\n/**\n * Augment a struct to make it optionally accept `undefined` values.\n */\n\nfunction optional(S) {\n  return new Struct({\n    type: `${S.type}?`,\n    schema: S.schema,\n    validator: (value, ctx) => {\n      return value === undefined || ctx.check(value, S);\n    }\n  });\n}\n/**\n * Validate that a partial object with specific entry values.\n */\n\nfunction partial(Structs) {\n  if (Structs instanceof Struct) {\n    Structs = Structs.schema;\n  }\n\n  const knowns = Object.keys(Structs);\n  const Never = never();\n  return new Struct({\n    type: `Partial<{${knowns.join(',')}}>`,\n    schema: Structs,\n    coercer: createObjectCoercer(Structs),\n\n    *validator(value, ctx) {\n      if (typeof value !== 'object' || value == null) {\n        yield ctx.fail();\n        return;\n      }\n\n      const unknowns = new Set(Object.keys(value));\n\n      for (const key of knowns) {\n        unknowns.delete(key);\n\n        if (!(key in value)) {\n          continue;\n        }\n\n        const Value = Structs[key];\n        const v = value[key];\n        yield* ctx.check(v, Value, value, key);\n      }\n\n      for (const key of unknowns) {\n        const v = value[key];\n        yield* ctx.check(v, Never, value, key);\n      }\n    }\n\n  });\n}\n/**\n * Validate that a value is a record with specific key and\n * value entries.\n */\n\nfunction record(Key, Value) {\n  return struct(`Record<${Key.type},${Value.type}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const k in value) {\n      const v = value[k];\n      yield* ctx.check(k, Key, value, k);\n      yield* ctx.check(v, Value, value, k);\n    }\n  });\n}\n/**\n * Validate that a set of values matches a specific type.\n */\n\nfunction set(Element) {\n  return struct(`Set<${Element.type}>`, (value, ctx) => {\n    if (!(value instanceof Set)) {\n      return false;\n    }\n\n    for (const val of value) {\n      const [failure] = ctx.check(val, Element);\n\n      if (failure) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n/**\n * Validate that a value is a string.\n */\n\nfunction string() {\n  return struct('string', value => {\n    return typeof value === 'string';\n  });\n}\n/**\n * Define a `Struct` instance with a type and validation function.\n */\n\nfunction struct(name, validator) {\n  return new Struct({\n    type: name,\n    validator,\n    schema: null\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return struct(`[${Elements.map(s => s.type).join(',')}]`, function* (value, ctx) {\n    if (!Array.isArray(value)) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const [index, Element] of Elements.entries()) {\n      const v = value[index];\n      yield* ctx.check(v, Element, value, index);\n    }\n\n    if (value.length > Elements.length) {\n      const index = Elements.length;\n      const v = value[index];\n      yield* ctx.check(v, Never, value, index);\n    }\n  });\n}\n/**\n * Validate that a value matches a specific strutural interface, like the\n * structural typing that TypeScript uses.\n */\n\nfunction type(Structs) {\n  const keys = Object.keys(Structs);\n  return struct(`Type<{${keys.join(',')}}>`, function* (value, ctx) {\n    if (typeof value !== 'object' || value == null) {\n      yield ctx.fail();\n      return;\n    }\n\n    for (const key of keys) {\n      const Value = Structs[key];\n      const v = value[key];\n      yield* ctx.check(v, Value, value, key);\n    }\n  });\n}\nfunction union(Structs) {\n  return struct(`${Structs.map(s => s.type).join(' | ')}`, function* (value, ctx) {\n    for (const S of Structs) {\n      const [...failures] = ctx.check(value, S);\n\n      if (failures.length === 0) {\n        return;\n      }\n    }\n\n    yield ctx.fail();\n  });\n}\n/**\n * Convert a value to a literal string.\n */\n\nfunction toLiteralString(value) {\n  return typeof value === 'string' ? `\"${value.replace(/\"/g, '\"')}\"` : `${value}`;\n}\n/**\n * Coerce the values of an object-like struct.\n */\n\n\nfunction createObjectCoercer(Structs) {\n  const knowns = Object.keys(Structs);\n  return value => {\n    if (typeof value !== 'object' || value == null) {\n      return value;\n    }\n\n    const ret = {};\n    const unknowns = new Set(Object.keys(value));\n\n    for (const key of knowns) {\n      unknowns.delete(key);\n      const Value = Structs[key];\n      const v = value[key];\n      ret[key] = coerce(v, Value);\n    }\n\n    for (const key of unknowns) {\n      ret[key] = value[key];\n    }\n\n    return ret;\n  };\n}\n\nexport { Struct, StructError, any, array, assert, boolean, coerce, coercion, date, defaulted, dynamic, empty, enums, func, instance, intersection, is, lazy, length, literal, map, masked, never, nullable, number, object, optional, partial, pattern, record, refinement, set, string, struct, tuple, type, union, validate };\n//# sourceMappingURL=index.es.js.map\n","/**\n * Copyright 2019-2022 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { LogManager } = require('./logging');\n\nclass UsageStats {\n  constructor() {\n    this.data = {};\n  }\n\n  /**\n   * Collect the usage stats from the params passed at the time of instantiating VWO and send them to VWO Server\n   * @param {Object} config    config passed at the time of instantiation.\n   */\n  collectUsageStats(config) {\n    this.data['eb'] = Number(!!config.batchEvents);\n    this.data['ig'] = Number(!!config.integrations);\n    this.data['ss'] = Number(!!config.userStorageService);\n    this.data['cl'] = Number(!(config.logger instanceof LogManager));\n    this.data['ll'] = Number(config.logging && config.logging.level);\n    this.data['tr'] = Number(config.shouldTrackReturningUser);\n    this.data['gt'] = Number(!!config.goalTypeToTrack);\n    this.data['pi'] = Number(!!config.pollingInterval);\n\n    Object.keys(this.data).forEach(function(key) {\n      if (!this.data[key]) {\n        delete this.data[key];\n      }\n    }, this);\n  }\n\n  /**\n   * Get the collected usage stats.\n   * @returns     collected usage stats data\n   */\n  getUsageStats() {\n    if (Object.keys(this.data).length > 0) {\n      this.data['_l'] = 1;\n    }\n    return this.data;\n  }\n}\n\nmodule.exports = UsageStats;\n"],"sourceRoot":""}